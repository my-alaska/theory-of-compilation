
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassoc<>ELESSEGREATEREQUALSNEQUALSleft+-left*/leftDOTADDDOTSUBleftDOTMULDOTDIVleft\'rightUMINUSnonassocIFXnonassocELSEADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB EGREATER ELESS ELSE EQUALS EYE FLOATNUM FOR ID IF INTNUM MULASSIGN NEQUALS ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction\n                    | instruction instruction : \'{\' instructions \'}\' instruction : if\n                   | loop\n                   | expression \';\'\n                   | return \';\'\n                   | assignment \';\'\n                   | print \';\'\n                   | BREAK \';\'\n                   | CONTINUE \';\' if : IF \'(\' expression \')\' instructions %prec IFX\n          | IF \'(\' expression \')\' instructions ELSE instructions loop : FOR ID \'=\' expression \':\' expression instructions\n            | WHILE \'(\' expression \')\' instructionsreturn : RETURN\n              | RETURN expressionassignment : assignable \'=\' expression\n                  | assignable ADDASSIGN expression\n                  | assignable SUBASSIGN expression\n                  | assignable MULASSIGN expression\n                  | assignable DIVASSIGN expressionassignable : ID\n                  | ID \'[\' expression \',\' expression \']\' print : PRINT printable_listprintable_list : printable_list \',\' printable\n                      | printableprintable : STRING\n                 | expressionexpression : assignable\n                  | \'(\' expression \')\'\n                  | INTNUM\n                  | FLOATNUM\n\n                  | matrix\n                  | matrix_function \'(\' expression \')\'\n\n                  | expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | \'-\' expression %prec UMINUS\n\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression\n\n                  | expression \'<\' expression\n                  | expression \'>\' expression\n                  | expression ELESS expression\n                  | expression EGREATER expression\n                  | expression EQUALS expression\n                  | expression NEQUALS expression\n                  | expression "\'"\n                  matrix : \'[\' nest_array_1 \']\' nest_array_1 : nest_array_1 \',\' \'[\' nest_array_2 \']\'\n                    | \'[\' nest_array_2 \']\' nest_array_2 : nest_array_2 \',\' expression\n                    | expression matrix_function : EYE\n                       | ZEROS\n                       | ONES'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,7,31,33,49,50,51,52,53,74,114,117,124,125,],[-3,0,-1,-2,-5,-7,-8,-4,-9,-10,-11,-12,-13,-14,-6,-15,-18,-16,-17,]),'{':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[5,5,-5,5,-7,-8,-26,-35,-36,-37,-4,5,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,5,5,-38,-15,5,5,5,-27,-16,5,-40,]),'BREAK':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[12,12,-5,12,-7,-8,-26,-35,-36,-37,-4,12,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,12,12,-38,-15,12,12,12,-27,-16,12,-40,]),'CONTINUE':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[13,13,-5,13,-7,-8,-26,-35,-36,-37,-4,13,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,13,13,-38,-15,13,13,13,-27,-16,13,-40,]),'IF':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[14,14,-5,14,-7,-8,-26,-35,-36,-37,-4,14,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,14,14,-38,-15,14,14,14,-27,-16,14,-40,]),'FOR':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[16,16,-5,16,-7,-8,-26,-35,-36,-37,-4,16,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,16,16,-38,-15,16,16,16,-27,-16,16,-40,]),'WHILE':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[18,18,-5,18,-7,-8,-26,-35,-36,-37,-4,18,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,18,18,-38,-15,18,18,18,-27,-16,18,-40,]),'(':([0,3,4,5,6,7,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[15,15,-5,15,-7,-8,54,15,-26,59,-35,-36,-37,65,15,15,15,-60,-61,-62,-4,15,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-54,-10,-11,-12,-13,-14,15,-33,15,15,15,15,15,15,15,15,-43,15,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,15,15,-55,15,15,15,-38,15,15,-15,15,15,15,15,-27,-16,15,15,-40,]),'INTNUM':([0,3,4,5,6,7,15,17,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[20,20,-5,20,-7,-8,20,-26,-35,-36,-37,20,20,20,-4,20,-9,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-54,-10,-11,-12,-13,-14,20,-33,20,20,20,20,20,20,20,20,-43,20,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,20,20,-55,20,20,20,-38,20,20,-15,20,20,20,20,-27,-16,20,20,-40,]),'FLOATNUM':([0,3,4,5,6,7,15,17,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[21,21,-5,21,-7,-8,21,-26,-35,-36,-37,21,21,21,-4,21,-9,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-54,-10,-11,-12,-13,-14,21,-33,21,21,21,21,21,21,21,21,-43,21,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,21,21,-55,21,21,21,-38,21,21,-15,21,21,21,21,-27,-16,21,21,-40,]),'-':([0,3,4,5,6,7,8,15,17,19,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,106,107,108,109,112,113,114,115,116,117,118,120,121,122,124,125,126,127,],[24,24,-5,24,-7,-8,35,24,-26,-33,-35,-36,-37,24,24,24,-4,24,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-54,-10,-11,-12,-13,-14,24,35,-33,24,24,24,24,24,24,24,24,-43,35,35,24,-6,-39,-40,-41,-42,-44,-45,-46,-47,35,35,35,35,35,35,35,-34,24,35,35,35,35,35,35,35,35,24,35,-55,24,35,24,24,-38,24,24,-15,24,35,24,35,24,126,-27,-16,24,24,-40,]),'RETURN':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[25,25,-5,25,-7,-8,-26,-35,-36,-37,-4,25,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,25,25,-38,-15,25,25,25,-27,-16,25,-40,]),'PRINT':([0,3,4,5,6,7,17,20,21,22,31,32,33,48,49,50,51,52,53,56,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,105,108,109,114,117,120,121,122,124,125,127,],[26,26,-5,26,-7,-8,-26,-35,-36,-37,-4,26,-9,-54,-10,-11,-12,-13,-14,-33,-43,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,26,26,-38,-15,26,26,26,-27,-16,26,-40,]),'ID':([0,3,4,5,6,7,15,16,17,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[17,17,-5,17,-7,-8,17,57,-26,-35,-36,-37,17,17,17,-4,17,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-54,-10,-11,-12,-13,-14,17,-33,17,17,17,17,17,17,17,17,-43,17,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,17,17,-55,17,17,17,-38,17,17,-15,17,17,17,17,-27,-16,17,17,-40,]),'[':([0,3,4,5,6,7,15,17,20,21,22,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,104,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[27,27,-5,27,-7,-8,27,58,-35,-36,-37,27,27,27,72,-4,27,-9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-54,-10,-11,-12,-13,-14,27,-33,27,27,27,27,27,27,27,27,-43,27,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,27,27,-55,113,27,27,27,-38,27,27,-15,27,27,27,27,-27,-16,27,27,-40,]),'EYE':([0,3,4,5,6,7,15,17,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[28,28,-5,28,-7,-8,28,-26,-35,-36,-37,28,28,28,-4,28,-9,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-54,-10,-11,-12,-13,-14,28,-33,28,28,28,28,28,28,28,28,-43,28,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,28,28,-55,28,28,28,-38,28,28,-15,28,28,28,28,-27,-16,28,28,-40,]),'ZEROS':([0,3,4,5,6,7,15,17,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[29,29,-5,29,-7,-8,29,-26,-35,-36,-37,29,29,29,-4,29,-9,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-54,-10,-11,-12,-13,-14,29,-33,29,29,29,29,29,29,29,29,-43,29,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,29,29,-55,29,29,29,-38,29,29,-15,29,29,29,29,-27,-16,29,29,-40,]),'ONES':([0,3,4,5,6,7,15,17,20,21,22,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,100,103,105,107,108,109,112,113,114,115,117,120,121,122,124,125,126,127,],[30,30,-5,30,-7,-8,30,-26,-35,-36,-37,30,30,30,-4,30,-9,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-54,-10,-11,-12,-13,-14,30,-33,30,30,30,30,30,30,30,30,-43,30,-6,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,30,30,-55,30,30,30,-38,30,30,-15,30,30,30,30,-27,-16,30,30,-40,]),'}':([4,6,7,31,32,33,49,50,51,52,53,74,114,117,124,125,],[-5,-7,-8,-4,74,-9,-10,-11,-12,-13,-14,-6,-15,-18,-16,-17,]),'ELSE':([4,6,7,31,33,49,50,51,52,53,74,114,117,124,125,],[-5,-7,-8,-4,-9,-10,-11,-12,-13,-14,-6,120,-18,-16,-17,]),';':([8,9,10,11,12,13,17,19,20,21,22,25,48,56,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,96,97,98,103,109,110,122,127,],[33,49,50,51,52,53,-26,-33,-35,-36,-37,-19,-54,-33,-43,-20,-28,-30,-31,-32,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-21,-22,-23,-24,-25,-55,-38,-29,-27,-43,]),'+':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[34,-26,-33,-35,-36,-37,-54,34,-33,-43,34,34,-39,-40,-41,-42,-44,-45,-46,-47,34,34,34,34,34,34,34,-34,34,34,34,34,34,34,34,34,34,-55,34,-38,34,34,34,-27,-40,]),'*':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[36,-26,-33,-35,-36,-37,-54,36,-33,-43,36,36,36,36,-41,-42,-44,-45,-46,-47,36,36,36,36,36,36,36,-34,36,36,36,36,36,36,36,36,36,-55,36,-38,36,36,36,-27,36,]),'/':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[37,-26,-33,-35,-36,-37,-54,37,-33,-43,37,37,37,37,-41,-42,-44,-45,-46,-47,37,37,37,37,37,37,37,-34,37,37,37,37,37,37,37,37,37,-55,37,-38,37,37,37,-27,37,]),'DOTADD':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[38,-26,-33,-35,-36,-37,-54,38,-33,-43,38,38,38,38,38,38,-44,-45,-46,-47,38,38,38,38,38,38,38,-34,38,38,38,38,38,38,38,38,38,-55,38,-38,38,38,38,-27,38,]),'DOTSUB':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[39,-26,-33,-35,-36,-37,-54,39,-33,-43,39,39,39,39,39,39,-44,-45,-46,-47,39,39,39,39,39,39,39,-34,39,39,39,39,39,39,39,39,39,-55,39,-38,39,39,39,-27,39,]),'DOTMUL':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[40,-26,-33,-35,-36,-37,-54,40,-33,-43,40,40,40,40,40,40,40,40,-46,-47,40,40,40,40,40,40,40,-34,40,40,40,40,40,40,40,40,40,-55,40,-38,40,40,40,-27,40,]),'DOTDIV':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[41,-26,-33,-35,-36,-37,-54,41,-33,-43,41,41,41,41,41,41,41,41,-46,-47,41,41,41,41,41,41,41,-34,41,41,41,41,41,41,41,41,41,-55,41,-38,41,41,41,-27,41,]),'<':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[42,-26,-33,-35,-36,-37,-54,42,-33,-43,42,42,-39,-40,-41,-42,-44,-45,-46,-47,None,None,None,None,None,None,42,-34,42,42,42,42,42,42,42,42,42,-55,42,-38,42,42,42,-27,-40,]),'>':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[43,-26,-33,-35,-36,-37,-54,43,-33,-43,43,43,-39,-40,-41,-42,-44,-45,-46,-47,None,None,None,None,None,None,43,-34,43,43,43,43,43,43,43,43,43,-55,43,-38,43,43,43,-27,-40,]),'ELESS':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[44,-26,-33,-35,-36,-37,-54,44,-33,-43,44,44,-39,-40,-41,-42,-44,-45,-46,-47,None,None,None,None,None,None,44,-34,44,44,44,44,44,44,44,44,44,-55,44,-38,44,44,44,-27,-40,]),'EGREATER':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[45,-26,-33,-35,-36,-37,-54,45,-33,-43,45,45,-39,-40,-41,-42,-44,-45,-46,-47,None,None,None,None,None,None,45,-34,45,45,45,45,45,45,45,45,45,-55,45,-38,45,45,45,-27,-40,]),'EQUALS':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[46,-26,-33,-35,-36,-37,-54,46,-33,-43,46,46,-39,-40,-41,-42,-44,-45,-46,-47,None,None,None,None,None,None,46,-34,46,46,46,46,46,46,46,46,46,-55,46,-38,46,46,46,-27,-40,]),'NEQUALS':([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[47,-26,-33,-35,-36,-37,-54,47,-33,-43,47,47,-39,-40,-41,-42,-44,-45,-46,-47,None,None,None,None,None,None,47,-34,47,47,47,47,47,47,47,47,47,-55,47,-38,47,47,47,-27,-40,]),"'":([8,17,19,20,21,22,48,55,56,66,67,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,102,103,106,109,116,118,121,122,127,],[48,-26,-33,-35,-36,-37,-54,48,-33,-43,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-34,48,48,48,48,48,48,48,48,48,-55,48,-38,48,48,48,-27,48,]),'=':([17,19,57,122,],[-26,60,91,-27,]),'ADDASSIGN':([17,19,122,],[-26,61,-27,]),'SUBASSIGN':([17,19,122,],[-26,62,-27,]),'MULASSIGN':([17,19,122,],[-26,63,-27,]),'DIVASSIGN':([17,19,122,],[-26,64,-27,]),')':([17,20,21,22,48,55,56,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,99,103,109,122,],[-26,-35,-36,-37,-54,90,-33,-43,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,105,-34,108,109,-55,-38,-27,]),',':([17,20,21,22,48,56,66,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,101,102,103,109,110,111,118,119,122,123,],[-26,-35,-36,-37,-54,-33,-43,100,-30,-31,-32,104,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,107,112,-59,-55,-38,-29,-57,-58,112,-27,-56,]),']':([17,20,21,22,48,56,66,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,101,102,103,109,111,116,118,119,122,123,],[-26,-35,-36,-37,-54,-33,-43,103,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,111,-59,-55,-38,-57,122,-58,123,-27,-56,]),':':([17,20,21,22,48,56,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,103,106,109,122,],[-26,-35,-36,-37,-54,-33,-43,-39,-40,-41,-42,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-34,-55,115,-38,-27,]),'STRING':([26,100,],[70,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,5,105,108,120,121,],[3,32,114,117,124,125,]),'instruction':([0,3,5,32,105,108,114,117,120,121,124,125,],[4,31,4,31,4,4,31,31,4,4,31,31,]),'if':([0,3,5,32,105,108,114,117,120,121,124,125,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'loop':([0,3,5,32,105,108,114,117,120,121,124,125,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'expression':([0,3,5,15,24,25,26,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,59,60,61,62,63,64,65,72,91,100,105,107,108,112,113,114,115,117,120,121,124,125,126,],[8,8,8,55,66,67,71,8,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,102,106,71,8,116,8,118,102,8,121,8,8,8,8,8,127,]),'return':([0,3,5,32,105,108,114,117,120,121,124,125,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'assignment':([0,3,5,32,105,108,114,117,120,121,124,125,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'print':([0,3,5,32,105,108,114,117,120,121,124,125,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'assignable':([0,3,5,15,24,25,26,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,59,60,61,62,63,64,65,72,91,100,105,107,108,112,113,114,115,117,120,121,124,125,126,],[19,19,19,56,56,56,56,19,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,19,56,19,56,56,19,56,19,19,19,19,19,56,]),'matrix':([0,3,5,15,24,25,26,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,59,60,61,62,63,64,65,72,91,100,105,107,108,112,113,114,115,117,120,121,124,125,126,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'matrix_function':([0,3,5,15,24,25,26,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,58,59,60,61,62,63,64,65,72,91,100,105,107,108,112,113,114,115,117,120,121,124,125,126,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'printable_list':([26,],[68,]),'printable':([26,100,],[69,110,]),'nest_array_1':([27,],[73,]),'nest_array_2':([72,113,],[101,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',38),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',41),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',44),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',48),
  ('instructions -> instruction','instructions',1,'p_instructions_1','Mparser.py',49),
  ('instruction -> { instructions }','instruction',3,'p_instructions_3','Mparser.py',52),
  ('instruction -> if','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> loop','instruction',1,'p_instruction','Mparser.py',59),
  ('instruction -> expression ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> return ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',62),
  ('instruction -> print ;','instruction',2,'p_instruction','Mparser.py',63),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',64),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',65),
  ('if -> IF ( expression ) instructions','if',5,'p_if','Mparser.py',69),
  ('if -> IF ( expression ) instructions ELSE instructions','if',7,'p_if','Mparser.py',70),
  ('loop -> FOR ID = expression : expression instructions','loop',7,'p_loop','Mparser.py',74),
  ('loop -> WHILE ( expression ) instructions','loop',5,'p_loop','Mparser.py',75),
  ('return -> RETURN','return',1,'p_return','Mparser.py',79),
  ('return -> RETURN expression','return',2,'p_return','Mparser.py',80),
  ('assignment -> assignable = expression','assignment',3,'p_assignment','Mparser.py',84),
  ('assignment -> assignable ADDASSIGN expression','assignment',3,'p_assignment','Mparser.py',85),
  ('assignment -> assignable SUBASSIGN expression','assignment',3,'p_assignment','Mparser.py',86),
  ('assignment -> assignable MULASSIGN expression','assignment',3,'p_assignment','Mparser.py',87),
  ('assignment -> assignable DIVASSIGN expression','assignment',3,'p_assignment','Mparser.py',88),
  ('assignable -> ID','assignable',1,'p_assignable','Mparser.py',91),
  ('assignable -> ID [ expression , expression ]','assignable',6,'p_assignable','Mparser.py',92),
  ('print -> PRINT printable_list','print',2,'p_print','Mparser.py',96),
  ('printable_list -> printable_list , printable','printable_list',3,'p_printable_list','Mparser.py',100),
  ('printable_list -> printable','printable_list',1,'p_printable_list','Mparser.py',101),
  ('printable -> STRING','printable',1,'p_printable','Mparser.py',104),
  ('printable -> expression','printable',1,'p_printable','Mparser.py',105),
  ('expression -> assignable','expression',1,'p_expression','Mparser.py',109),
  ('expression -> ( expression )','expression',3,'p_expression','Mparser.py',110),
  ('expression -> INTNUM','expression',1,'p_expression','Mparser.py',111),
  ('expression -> FLOATNUM','expression',1,'p_expression','Mparser.py',112),
  ('expression -> matrix','expression',1,'p_expression','Mparser.py',114),
  ('expression -> matrix_function ( expression )','expression',4,'p_expression','Mparser.py',115),
  ('expression -> expression + expression','expression',3,'p_expression','Mparser.py',117),
  ('expression -> expression - expression','expression',3,'p_expression','Mparser.py',118),
  ('expression -> expression * expression','expression',3,'p_expression','Mparser.py',119),
  ('expression -> expression / expression','expression',3,'p_expression','Mparser.py',120),
  ('expression -> - expression','expression',2,'p_expression','Mparser.py',121),
  ('expression -> expression DOTADD expression','expression',3,'p_expression','Mparser.py',123),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression','Mparser.py',124),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression','Mparser.py',125),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression','Mparser.py',126),
  ('expression -> expression < expression','expression',3,'p_expression','Mparser.py',128),
  ('expression -> expression > expression','expression',3,'p_expression','Mparser.py',129),
  ('expression -> expression ELESS expression','expression',3,'p_expression','Mparser.py',130),
  ('expression -> expression EGREATER expression','expression',3,'p_expression','Mparser.py',131),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','Mparser.py',132),
  ('expression -> expression NEQUALS expression','expression',3,'p_expression','Mparser.py',133),
  ("expression -> expression '",'expression',2,'p_expression','Mparser.py',134),
  ('matrix -> [ nest_array_1 ]','matrix',3,'p_matrix','Mparser.py',138),
  ('nest_array_1 -> nest_array_1 , [ nest_array_2 ]','nest_array_1',5,'p_nest_array_1','Mparser.py',140),
  ('nest_array_1 -> [ nest_array_2 ]','nest_array_1',3,'p_nest_array_1','Mparser.py',141),
  ('nest_array_2 -> nest_array_2 , expression','nest_array_2',3,'p_nest_array_2','Mparser.py',143),
  ('nest_array_2 -> expression','nest_array_2',1,'p_nest_array_2','Mparser.py',144),
  ('matrix_function -> EYE','matrix_function',1,'p_matrix_function','Mparser.py',148),
  ('matrix_function -> ZEROS','matrix_function',1,'p_matrix_function','Mparser.py',149),
  ('matrix_function -> ONES','matrix_function',1,'p_matrix_function','Mparser.py',150),
]
