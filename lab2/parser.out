Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> { instructions }
Rule 7     instruction -> if
Rule 8     instruction -> loop
Rule 9     instruction -> expression ;
Rule 10    instruction -> return ;
Rule 11    instruction -> assignment ;
Rule 12    instruction -> print ;
Rule 13    instruction -> BREAK ;
Rule 14    instruction -> CONTINUE ;
Rule 15    if -> IF ( expression ) instructions
Rule 16    if -> IF ( expression ) instructions ELSE instructions
Rule 17    loop -> FOR ID = expression : expression instructions
Rule 18    loop -> WHILE ( expression ) instructions
Rule 19    return -> RETURN
Rule 20    return -> RETURN expression
Rule 21    assignment -> assignable = expression
Rule 22    assignment -> assignable ADDASSIGN expression
Rule 23    assignment -> assignable SUBASSIGN expression
Rule 24    assignment -> assignable MULASSIGN expression
Rule 25    assignment -> assignable DIVASSIGN expression
Rule 26    assignable -> ID
Rule 27    assignable -> ID [ expression , expression ]
Rule 28    print -> PRINT printable_list
Rule 29    printable_list -> printable_list , printable
Rule 30    printable_list -> printable
Rule 31    printable -> STRING
Rule 32    printable -> expression
Rule 33    expression -> assignable
Rule 34    expression -> ( expression )
Rule 35    expression -> INTNUM
Rule 36    expression -> FLOATNUM
Rule 37    expression -> matrix
Rule 38    expression -> matrix_function ( expression )
Rule 39    expression -> expression + expression
Rule 40    expression -> expression - expression
Rule 41    expression -> expression * expression
Rule 42    expression -> expression / expression
Rule 43    expression -> - expression
Rule 44    expression -> expression DOTADD expression
Rule 45    expression -> expression DOTSUB expression
Rule 46    expression -> expression DOTMUL expression
Rule 47    expression -> expression DOTDIV expression
Rule 48    expression -> expression < expression
Rule 49    expression -> expression > expression
Rule 50    expression -> expression ELESS expression
Rule 51    expression -> expression EGREATER expression
Rule 52    expression -> expression EQUALS expression
Rule 53    expression -> expression NEQUALS expression
Rule 54    expression -> expression '
Rule 55    matrix -> [ nest_array_1 ]
Rule 56    nest_array_1 -> nest_array_1 , [ nest_array_2 ]
Rule 57    nest_array_1 -> [ nest_array_2 ]
Rule 58    nest_array_2 -> nest_array_2 , expression
Rule 59    nest_array_2 -> expression
Rule 60    matrix_function -> EYE
Rule 61    matrix_function -> ZEROS
Rule 62    matrix_function -> ONES

Terminals, with rules where they appear

'                    : 54
(                    : 15 16 18 34 38
)                    : 15 16 18 34 38
*                    : 41
+                    : 39
,                    : 27 29 56 58
-                    : 40 43
/                    : 42
:                    : 17
;                    : 9 10 11 12 13 14
<                    : 48
=                    : 17 21
>                    : 49
ADDASSIGN            : 22
BREAK                : 13
CONTINUE             : 14
DIVASSIGN            : 25
DOTADD               : 44
DOTDIV               : 47
DOTMUL               : 46
DOTSUB               : 45
EGREATER             : 51
ELESS                : 50
ELSE                 : 16
EQUALS               : 52
EYE                  : 60
FLOATNUM             : 36
FOR                  : 17
ID                   : 17 26 27
IF                   : 15 16
INTNUM               : 35
MULASSIGN            : 24
NEQUALS              : 53
ONES                 : 62
PRINT                : 28
RETURN               : 19 20
STRING               : 31
SUBASSIGN            : 23
WHILE                : 18
ZEROS                : 61
[                    : 27 55 56 57
]                    : 27 55 56 57
error                : 
{                    : 6
}                    : 6

Nonterminals, with rules where they appear

assignable           : 21 22 23 24 25 33
assignment           : 11
expression           : 9 15 16 17 17 18 20 21 22 23 24 25 27 27 32 34 38 39 39 40 40 41 41 42 42 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 58 59
if                   : 7
instruction          : 4 5
instructions         : 2 4 6 15 16 16 17 18
instructions_opt     : 1
loop                 : 8
matrix               : 37
matrix_function      : 38
nest_array_1         : 55 56
nest_array_2         : 56 57 58
print                : 12
printable            : 29 30
printable_list       : 28 29
program              : 0
return               : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    expression                     shift and go to state 8
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    instruction                    shift and go to state 31
    if                             shift and go to state 6
    loop                           shift and go to state 7
    expression                     shift and go to state 8
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 4

    (5) instructions -> instruction .

    {               reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    (               reduce using rule 5 (instructions -> instruction .)
    INTNUM          reduce using rule 5 (instructions -> instruction .)
    FLOATNUM        reduce using rule 5 (instructions -> instruction .)
    -               reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    [               reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)
    ELSE            reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    instructions                   shift and go to state 32
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    expression                     shift and go to state 8
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 6

    (7) instruction -> if .

    {               reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    (               reduce using rule 7 (instruction -> if .)
    INTNUM          reduce using rule 7 (instruction -> if .)
    FLOATNUM        reduce using rule 7 (instruction -> if .)
    -               reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    [               reduce using rule 7 (instruction -> if .)
    EYE             reduce using rule 7 (instruction -> if .)
    ZEROS           reduce using rule 7 (instruction -> if .)
    ONES            reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)


state 7

    (8) instruction -> loop .

    {               reduce using rule 8 (instruction -> loop .)
    BREAK           reduce using rule 8 (instruction -> loop .)
    CONTINUE        reduce using rule 8 (instruction -> loop .)
    IF              reduce using rule 8 (instruction -> loop .)
    FOR             reduce using rule 8 (instruction -> loop .)
    WHILE           reduce using rule 8 (instruction -> loop .)
    (               reduce using rule 8 (instruction -> loop .)
    INTNUM          reduce using rule 8 (instruction -> loop .)
    FLOATNUM        reduce using rule 8 (instruction -> loop .)
    -               reduce using rule 8 (instruction -> loop .)
    RETURN          reduce using rule 8 (instruction -> loop .)
    PRINT           reduce using rule 8 (instruction -> loop .)
    ID              reduce using rule 8 (instruction -> loop .)
    [               reduce using rule 8 (instruction -> loop .)
    EYE             reduce using rule 8 (instruction -> loop .)
    ZEROS           reduce using rule 8 (instruction -> loop .)
    ONES            reduce using rule 8 (instruction -> loop .)
    $end            reduce using rule 8 (instruction -> loop .)
    }               reduce using rule 8 (instruction -> loop .)
    ELSE            reduce using rule 8 (instruction -> loop .)


state 8

    (9) instruction -> expression . ;
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               shift and go to state 33
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 9

    (10) instruction -> return . ;

    ;               shift and go to state 49


state 10

    (11) instruction -> assignment . ;

    ;               shift and go to state 50


state 11

    (12) instruction -> print . ;

    ;               shift and go to state 51


state 12

    (13) instruction -> BREAK . ;

    ;               shift and go to state 52


state 13

    (14) instruction -> CONTINUE . ;

    ;               shift and go to state 53


state 14

    (15) if -> IF . ( expression ) instructions
    (16) if -> IF . ( expression ) instructions ELSE instructions

    (               shift and go to state 54


state 15

    (34) expression -> ( . expression )
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 55
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 16

    (17) loop -> FOR . ID = expression : expression instructions

    ID              shift and go to state 57


state 17

    (26) assignable -> ID .
    (27) assignable -> ID . [ expression , expression ]

  ! shift/reduce conflict for [ resolved as shift
    =               reduce using rule 26 (assignable -> ID .)
    ADDASSIGN       reduce using rule 26 (assignable -> ID .)
    SUBASSIGN       reduce using rule 26 (assignable -> ID .)
    MULASSIGN       reduce using rule 26 (assignable -> ID .)
    DIVASSIGN       reduce using rule 26 (assignable -> ID .)
    ;               reduce using rule 26 (assignable -> ID .)
    +               reduce using rule 26 (assignable -> ID .)
    -               reduce using rule 26 (assignable -> ID .)
    *               reduce using rule 26 (assignable -> ID .)
    /               reduce using rule 26 (assignable -> ID .)
    DOTADD          reduce using rule 26 (assignable -> ID .)
    DOTSUB          reduce using rule 26 (assignable -> ID .)
    DOTMUL          reduce using rule 26 (assignable -> ID .)
    DOTDIV          reduce using rule 26 (assignable -> ID .)
    <               reduce using rule 26 (assignable -> ID .)
    >               reduce using rule 26 (assignable -> ID .)
    ELESS           reduce using rule 26 (assignable -> ID .)
    EGREATER        reduce using rule 26 (assignable -> ID .)
    EQUALS          reduce using rule 26 (assignable -> ID .)
    NEQUALS         reduce using rule 26 (assignable -> ID .)
    '               reduce using rule 26 (assignable -> ID .)
    )               reduce using rule 26 (assignable -> ID .)
    ,               reduce using rule 26 (assignable -> ID .)
    ]               reduce using rule 26 (assignable -> ID .)
    :               reduce using rule 26 (assignable -> ID .)
    {               reduce using rule 26 (assignable -> ID .)
    BREAK           reduce using rule 26 (assignable -> ID .)
    CONTINUE        reduce using rule 26 (assignable -> ID .)
    IF              reduce using rule 26 (assignable -> ID .)
    FOR             reduce using rule 26 (assignable -> ID .)
    WHILE           reduce using rule 26 (assignable -> ID .)
    (               reduce using rule 26 (assignable -> ID .)
    INTNUM          reduce using rule 26 (assignable -> ID .)
    FLOATNUM        reduce using rule 26 (assignable -> ID .)
    RETURN          reduce using rule 26 (assignable -> ID .)
    PRINT           reduce using rule 26 (assignable -> ID .)
    ID              reduce using rule 26 (assignable -> ID .)
    EYE             reduce using rule 26 (assignable -> ID .)
    ZEROS           reduce using rule 26 (assignable -> ID .)
    ONES            reduce using rule 26 (assignable -> ID .)
    [               shift and go to state 58

  ! [               [ reduce using rule 26 (assignable -> ID .) ]


state 18

    (18) loop -> WHILE . ( expression ) instructions

    (               shift and go to state 59


state 19

    (33) expression -> assignable .
    (21) assignment -> assignable . = expression
    (22) assignment -> assignable . ADDASSIGN expression
    (23) assignment -> assignable . SUBASSIGN expression
    (24) assignment -> assignable . MULASSIGN expression
    (25) assignment -> assignable . DIVASSIGN expression

    ;               reduce using rule 33 (expression -> assignable .)
    +               reduce using rule 33 (expression -> assignable .)
    -               reduce using rule 33 (expression -> assignable .)
    *               reduce using rule 33 (expression -> assignable .)
    /               reduce using rule 33 (expression -> assignable .)
    DOTADD          reduce using rule 33 (expression -> assignable .)
    DOTSUB          reduce using rule 33 (expression -> assignable .)
    DOTMUL          reduce using rule 33 (expression -> assignable .)
    DOTDIV          reduce using rule 33 (expression -> assignable .)
    <               reduce using rule 33 (expression -> assignable .)
    >               reduce using rule 33 (expression -> assignable .)
    ELESS           reduce using rule 33 (expression -> assignable .)
    EGREATER        reduce using rule 33 (expression -> assignable .)
    EQUALS          reduce using rule 33 (expression -> assignable .)
    NEQUALS         reduce using rule 33 (expression -> assignable .)
    '               reduce using rule 33 (expression -> assignable .)
    =               shift and go to state 60
    ADDASSIGN       shift and go to state 61
    SUBASSIGN       shift and go to state 62
    MULASSIGN       shift and go to state 63
    DIVASSIGN       shift and go to state 64


state 20

    (35) expression -> INTNUM .

    ;               reduce using rule 35 (expression -> INTNUM .)
    +               reduce using rule 35 (expression -> INTNUM .)
    -               reduce using rule 35 (expression -> INTNUM .)
    *               reduce using rule 35 (expression -> INTNUM .)
    /               reduce using rule 35 (expression -> INTNUM .)
    DOTADD          reduce using rule 35 (expression -> INTNUM .)
    DOTSUB          reduce using rule 35 (expression -> INTNUM .)
    DOTMUL          reduce using rule 35 (expression -> INTNUM .)
    DOTDIV          reduce using rule 35 (expression -> INTNUM .)
    <               reduce using rule 35 (expression -> INTNUM .)
    >               reduce using rule 35 (expression -> INTNUM .)
    ELESS           reduce using rule 35 (expression -> INTNUM .)
    EGREATER        reduce using rule 35 (expression -> INTNUM .)
    EQUALS          reduce using rule 35 (expression -> INTNUM .)
    NEQUALS         reduce using rule 35 (expression -> INTNUM .)
    '               reduce using rule 35 (expression -> INTNUM .)
    )               reduce using rule 35 (expression -> INTNUM .)
    ,               reduce using rule 35 (expression -> INTNUM .)
    ]               reduce using rule 35 (expression -> INTNUM .)
    :               reduce using rule 35 (expression -> INTNUM .)
    {               reduce using rule 35 (expression -> INTNUM .)
    BREAK           reduce using rule 35 (expression -> INTNUM .)
    CONTINUE        reduce using rule 35 (expression -> INTNUM .)
    IF              reduce using rule 35 (expression -> INTNUM .)
    FOR             reduce using rule 35 (expression -> INTNUM .)
    WHILE           reduce using rule 35 (expression -> INTNUM .)
    (               reduce using rule 35 (expression -> INTNUM .)
    INTNUM          reduce using rule 35 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 35 (expression -> INTNUM .)
    RETURN          reduce using rule 35 (expression -> INTNUM .)
    PRINT           reduce using rule 35 (expression -> INTNUM .)
    ID              reduce using rule 35 (expression -> INTNUM .)
    [               reduce using rule 35 (expression -> INTNUM .)
    EYE             reduce using rule 35 (expression -> INTNUM .)
    ZEROS           reduce using rule 35 (expression -> INTNUM .)
    ONES            reduce using rule 35 (expression -> INTNUM .)


state 21

    (36) expression -> FLOATNUM .

    ;               reduce using rule 36 (expression -> FLOATNUM .)
    +               reduce using rule 36 (expression -> FLOATNUM .)
    -               reduce using rule 36 (expression -> FLOATNUM .)
    *               reduce using rule 36 (expression -> FLOATNUM .)
    /               reduce using rule 36 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 36 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 36 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 36 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 36 (expression -> FLOATNUM .)
    <               reduce using rule 36 (expression -> FLOATNUM .)
    >               reduce using rule 36 (expression -> FLOATNUM .)
    ELESS           reduce using rule 36 (expression -> FLOATNUM .)
    EGREATER        reduce using rule 36 (expression -> FLOATNUM .)
    EQUALS          reduce using rule 36 (expression -> FLOATNUM .)
    NEQUALS         reduce using rule 36 (expression -> FLOATNUM .)
    '               reduce using rule 36 (expression -> FLOATNUM .)
    )               reduce using rule 36 (expression -> FLOATNUM .)
    ,               reduce using rule 36 (expression -> FLOATNUM .)
    ]               reduce using rule 36 (expression -> FLOATNUM .)
    :               reduce using rule 36 (expression -> FLOATNUM .)
    {               reduce using rule 36 (expression -> FLOATNUM .)
    BREAK           reduce using rule 36 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 36 (expression -> FLOATNUM .)
    IF              reduce using rule 36 (expression -> FLOATNUM .)
    FOR             reduce using rule 36 (expression -> FLOATNUM .)
    WHILE           reduce using rule 36 (expression -> FLOATNUM .)
    (               reduce using rule 36 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 36 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 36 (expression -> FLOATNUM .)
    RETURN          reduce using rule 36 (expression -> FLOATNUM .)
    PRINT           reduce using rule 36 (expression -> FLOATNUM .)
    ID              reduce using rule 36 (expression -> FLOATNUM .)
    [               reduce using rule 36 (expression -> FLOATNUM .)
    EYE             reduce using rule 36 (expression -> FLOATNUM .)
    ZEROS           reduce using rule 36 (expression -> FLOATNUM .)
    ONES            reduce using rule 36 (expression -> FLOATNUM .)


state 22

    (37) expression -> matrix .

    ;               reduce using rule 37 (expression -> matrix .)
    +               reduce using rule 37 (expression -> matrix .)
    -               reduce using rule 37 (expression -> matrix .)
    *               reduce using rule 37 (expression -> matrix .)
    /               reduce using rule 37 (expression -> matrix .)
    DOTADD          reduce using rule 37 (expression -> matrix .)
    DOTSUB          reduce using rule 37 (expression -> matrix .)
    DOTMUL          reduce using rule 37 (expression -> matrix .)
    DOTDIV          reduce using rule 37 (expression -> matrix .)
    <               reduce using rule 37 (expression -> matrix .)
    >               reduce using rule 37 (expression -> matrix .)
    ELESS           reduce using rule 37 (expression -> matrix .)
    EGREATER        reduce using rule 37 (expression -> matrix .)
    EQUALS          reduce using rule 37 (expression -> matrix .)
    NEQUALS         reduce using rule 37 (expression -> matrix .)
    '               reduce using rule 37 (expression -> matrix .)
    )               reduce using rule 37 (expression -> matrix .)
    ,               reduce using rule 37 (expression -> matrix .)
    ]               reduce using rule 37 (expression -> matrix .)
    :               reduce using rule 37 (expression -> matrix .)
    {               reduce using rule 37 (expression -> matrix .)
    BREAK           reduce using rule 37 (expression -> matrix .)
    CONTINUE        reduce using rule 37 (expression -> matrix .)
    IF              reduce using rule 37 (expression -> matrix .)
    FOR             reduce using rule 37 (expression -> matrix .)
    WHILE           reduce using rule 37 (expression -> matrix .)
    (               reduce using rule 37 (expression -> matrix .)
    INTNUM          reduce using rule 37 (expression -> matrix .)
    FLOATNUM        reduce using rule 37 (expression -> matrix .)
    RETURN          reduce using rule 37 (expression -> matrix .)
    PRINT           reduce using rule 37 (expression -> matrix .)
    ID              reduce using rule 37 (expression -> matrix .)
    [               reduce using rule 37 (expression -> matrix .)
    EYE             reduce using rule 37 (expression -> matrix .)
    ZEROS           reduce using rule 37 (expression -> matrix .)
    ONES            reduce using rule 37 (expression -> matrix .)


state 23

    (38) expression -> matrix_function . ( expression )

    (               shift and go to state 65


state 24

    (43) expression -> - . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 66
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 25

    (19) return -> RETURN .
    (20) return -> RETURN . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    ;               reduce using rule 19 (return -> RETURN .)
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 67
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 26

    (28) print -> PRINT . printable_list
    (29) printable_list -> . printable_list , printable
    (30) printable_list -> . printable
    (31) printable -> . STRING
    (32) printable -> . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    STRING          shift and go to state 70
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    printable_list                 shift and go to state 68
    printable                      shift and go to state 69
    expression                     shift and go to state 71
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 27

    (55) matrix -> [ . nest_array_1 ]
    (56) nest_array_1 -> . nest_array_1 , [ nest_array_2 ]
    (57) nest_array_1 -> . [ nest_array_2 ]

    [               shift and go to state 72

    nest_array_1                   shift and go to state 73

state 28

    (60) matrix_function -> EYE .

    (               reduce using rule 60 (matrix_function -> EYE .)


state 29

    (61) matrix_function -> ZEROS .

    (               reduce using rule 61 (matrix_function -> ZEROS .)


state 30

    (62) matrix_function -> ONES .

    (               reduce using rule 62 (matrix_function -> ONES .)


state 31

    (4) instructions -> instructions instruction .

    {               reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    (               reduce using rule 4 (instructions -> instructions instruction .)
    INTNUM          reduce using rule 4 (instructions -> instructions instruction .)
    FLOATNUM        reduce using rule 4 (instructions -> instructions instruction .)
    -               reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    [               reduce using rule 4 (instructions -> instructions instruction .)
    EYE             reduce using rule 4 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 4 (instructions -> instructions instruction .)
    ONES            reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)
    ELSE            reduce using rule 4 (instructions -> instructions instruction .)


state 32

    (6) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    }               shift and go to state 74
    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    instruction                    shift and go to state 31
    if                             shift and go to state 6
    loop                           shift and go to state 7
    expression                     shift and go to state 8
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 33

    (9) instruction -> expression ; .

    {               reduce using rule 9 (instruction -> expression ; .)
    BREAK           reduce using rule 9 (instruction -> expression ; .)
    CONTINUE        reduce using rule 9 (instruction -> expression ; .)
    IF              reduce using rule 9 (instruction -> expression ; .)
    FOR             reduce using rule 9 (instruction -> expression ; .)
    WHILE           reduce using rule 9 (instruction -> expression ; .)
    (               reduce using rule 9 (instruction -> expression ; .)
    INTNUM          reduce using rule 9 (instruction -> expression ; .)
    FLOATNUM        reduce using rule 9 (instruction -> expression ; .)
    -               reduce using rule 9 (instruction -> expression ; .)
    RETURN          reduce using rule 9 (instruction -> expression ; .)
    PRINT           reduce using rule 9 (instruction -> expression ; .)
    ID              reduce using rule 9 (instruction -> expression ; .)
    [               reduce using rule 9 (instruction -> expression ; .)
    EYE             reduce using rule 9 (instruction -> expression ; .)
    ZEROS           reduce using rule 9 (instruction -> expression ; .)
    ONES            reduce using rule 9 (instruction -> expression ; .)
    $end            reduce using rule 9 (instruction -> expression ; .)
    }               reduce using rule 9 (instruction -> expression ; .)
    ELSE            reduce using rule 9 (instruction -> expression ; .)


state 34

    (39) expression -> expression + . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 75
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 35

    (40) expression -> expression - . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 76
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 36

    (41) expression -> expression * . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 77
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 37

    (42) expression -> expression / . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 78
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 38

    (44) expression -> expression DOTADD . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 79
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 39

    (45) expression -> expression DOTSUB . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 80
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 40

    (46) expression -> expression DOTMUL . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 81
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 41

    (47) expression -> expression DOTDIV . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 82
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 42

    (48) expression -> expression < . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 83
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 43

    (49) expression -> expression > . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 84
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 44

    (50) expression -> expression ELESS . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 85
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 45

    (51) expression -> expression EGREATER . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 86
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 46

    (52) expression -> expression EQUALS . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 87
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 47

    (53) expression -> expression NEQUALS . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 88
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 48

    (54) expression -> expression ' .

    ;               reduce using rule 54 (expression -> expression ' .)
    +               reduce using rule 54 (expression -> expression ' .)
    -               reduce using rule 54 (expression -> expression ' .)
    *               reduce using rule 54 (expression -> expression ' .)
    /               reduce using rule 54 (expression -> expression ' .)
    DOTADD          reduce using rule 54 (expression -> expression ' .)
    DOTSUB          reduce using rule 54 (expression -> expression ' .)
    DOTMUL          reduce using rule 54 (expression -> expression ' .)
    DOTDIV          reduce using rule 54 (expression -> expression ' .)
    <               reduce using rule 54 (expression -> expression ' .)
    >               reduce using rule 54 (expression -> expression ' .)
    ELESS           reduce using rule 54 (expression -> expression ' .)
    EGREATER        reduce using rule 54 (expression -> expression ' .)
    EQUALS          reduce using rule 54 (expression -> expression ' .)
    NEQUALS         reduce using rule 54 (expression -> expression ' .)
    '               reduce using rule 54 (expression -> expression ' .)
    )               reduce using rule 54 (expression -> expression ' .)
    ,               reduce using rule 54 (expression -> expression ' .)
    ]               reduce using rule 54 (expression -> expression ' .)
    :               reduce using rule 54 (expression -> expression ' .)
    {               reduce using rule 54 (expression -> expression ' .)
    BREAK           reduce using rule 54 (expression -> expression ' .)
    CONTINUE        reduce using rule 54 (expression -> expression ' .)
    IF              reduce using rule 54 (expression -> expression ' .)
    FOR             reduce using rule 54 (expression -> expression ' .)
    WHILE           reduce using rule 54 (expression -> expression ' .)
    (               reduce using rule 54 (expression -> expression ' .)
    INTNUM          reduce using rule 54 (expression -> expression ' .)
    FLOATNUM        reduce using rule 54 (expression -> expression ' .)
    RETURN          reduce using rule 54 (expression -> expression ' .)
    PRINT           reduce using rule 54 (expression -> expression ' .)
    ID              reduce using rule 54 (expression -> expression ' .)
    [               reduce using rule 54 (expression -> expression ' .)
    EYE             reduce using rule 54 (expression -> expression ' .)
    ZEROS           reduce using rule 54 (expression -> expression ' .)
    ONES            reduce using rule 54 (expression -> expression ' .)


state 49

    (10) instruction -> return ; .

    {               reduce using rule 10 (instruction -> return ; .)
    BREAK           reduce using rule 10 (instruction -> return ; .)
    CONTINUE        reduce using rule 10 (instruction -> return ; .)
    IF              reduce using rule 10 (instruction -> return ; .)
    FOR             reduce using rule 10 (instruction -> return ; .)
    WHILE           reduce using rule 10 (instruction -> return ; .)
    (               reduce using rule 10 (instruction -> return ; .)
    INTNUM          reduce using rule 10 (instruction -> return ; .)
    FLOATNUM        reduce using rule 10 (instruction -> return ; .)
    -               reduce using rule 10 (instruction -> return ; .)
    RETURN          reduce using rule 10 (instruction -> return ; .)
    PRINT           reduce using rule 10 (instruction -> return ; .)
    ID              reduce using rule 10 (instruction -> return ; .)
    [               reduce using rule 10 (instruction -> return ; .)
    EYE             reduce using rule 10 (instruction -> return ; .)
    ZEROS           reduce using rule 10 (instruction -> return ; .)
    ONES            reduce using rule 10 (instruction -> return ; .)
    $end            reduce using rule 10 (instruction -> return ; .)
    }               reduce using rule 10 (instruction -> return ; .)
    ELSE            reduce using rule 10 (instruction -> return ; .)


state 50

    (11) instruction -> assignment ; .

    {               reduce using rule 11 (instruction -> assignment ; .)
    BREAK           reduce using rule 11 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 11 (instruction -> assignment ; .)
    IF              reduce using rule 11 (instruction -> assignment ; .)
    FOR             reduce using rule 11 (instruction -> assignment ; .)
    WHILE           reduce using rule 11 (instruction -> assignment ; .)
    (               reduce using rule 11 (instruction -> assignment ; .)
    INTNUM          reduce using rule 11 (instruction -> assignment ; .)
    FLOATNUM        reduce using rule 11 (instruction -> assignment ; .)
    -               reduce using rule 11 (instruction -> assignment ; .)
    RETURN          reduce using rule 11 (instruction -> assignment ; .)
    PRINT           reduce using rule 11 (instruction -> assignment ; .)
    ID              reduce using rule 11 (instruction -> assignment ; .)
    [               reduce using rule 11 (instruction -> assignment ; .)
    EYE             reduce using rule 11 (instruction -> assignment ; .)
    ZEROS           reduce using rule 11 (instruction -> assignment ; .)
    ONES            reduce using rule 11 (instruction -> assignment ; .)
    $end            reduce using rule 11 (instruction -> assignment ; .)
    }               reduce using rule 11 (instruction -> assignment ; .)
    ELSE            reduce using rule 11 (instruction -> assignment ; .)


state 51

    (12) instruction -> print ; .

    {               reduce using rule 12 (instruction -> print ; .)
    BREAK           reduce using rule 12 (instruction -> print ; .)
    CONTINUE        reduce using rule 12 (instruction -> print ; .)
    IF              reduce using rule 12 (instruction -> print ; .)
    FOR             reduce using rule 12 (instruction -> print ; .)
    WHILE           reduce using rule 12 (instruction -> print ; .)
    (               reduce using rule 12 (instruction -> print ; .)
    INTNUM          reduce using rule 12 (instruction -> print ; .)
    FLOATNUM        reduce using rule 12 (instruction -> print ; .)
    -               reduce using rule 12 (instruction -> print ; .)
    RETURN          reduce using rule 12 (instruction -> print ; .)
    PRINT           reduce using rule 12 (instruction -> print ; .)
    ID              reduce using rule 12 (instruction -> print ; .)
    [               reduce using rule 12 (instruction -> print ; .)
    EYE             reduce using rule 12 (instruction -> print ; .)
    ZEROS           reduce using rule 12 (instruction -> print ; .)
    ONES            reduce using rule 12 (instruction -> print ; .)
    $end            reduce using rule 12 (instruction -> print ; .)
    }               reduce using rule 12 (instruction -> print ; .)
    ELSE            reduce using rule 12 (instruction -> print ; .)


state 52

    (13) instruction -> BREAK ; .

    {               reduce using rule 13 (instruction -> BREAK ; .)
    BREAK           reduce using rule 13 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 13 (instruction -> BREAK ; .)
    IF              reduce using rule 13 (instruction -> BREAK ; .)
    FOR             reduce using rule 13 (instruction -> BREAK ; .)
    WHILE           reduce using rule 13 (instruction -> BREAK ; .)
    (               reduce using rule 13 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 13 (instruction -> BREAK ; .)
    FLOATNUM        reduce using rule 13 (instruction -> BREAK ; .)
    -               reduce using rule 13 (instruction -> BREAK ; .)
    RETURN          reduce using rule 13 (instruction -> BREAK ; .)
    PRINT           reduce using rule 13 (instruction -> BREAK ; .)
    ID              reduce using rule 13 (instruction -> BREAK ; .)
    [               reduce using rule 13 (instruction -> BREAK ; .)
    EYE             reduce using rule 13 (instruction -> BREAK ; .)
    ZEROS           reduce using rule 13 (instruction -> BREAK ; .)
    ONES            reduce using rule 13 (instruction -> BREAK ; .)
    $end            reduce using rule 13 (instruction -> BREAK ; .)
    }               reduce using rule 13 (instruction -> BREAK ; .)
    ELSE            reduce using rule 13 (instruction -> BREAK ; .)


state 53

    (14) instruction -> CONTINUE ; .

    {               reduce using rule 14 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 14 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 14 (instruction -> CONTINUE ; .)
    IF              reduce using rule 14 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 14 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 14 (instruction -> CONTINUE ; .)
    (               reduce using rule 14 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 14 (instruction -> CONTINUE ; .)
    FLOATNUM        reduce using rule 14 (instruction -> CONTINUE ; .)
    -               reduce using rule 14 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 14 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 14 (instruction -> CONTINUE ; .)
    ID              reduce using rule 14 (instruction -> CONTINUE ; .)
    [               reduce using rule 14 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 14 (instruction -> CONTINUE ; .)
    ZEROS           reduce using rule 14 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 14 (instruction -> CONTINUE ; .)
    $end            reduce using rule 14 (instruction -> CONTINUE ; .)
    }               reduce using rule 14 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 14 (instruction -> CONTINUE ; .)


state 54

    (15) if -> IF ( . expression ) instructions
    (16) if -> IF ( . expression ) instructions ELSE instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 89
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 55

    (34) expression -> ( expression . )
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    )               shift and go to state 90
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 56

    (33) expression -> assignable .

    )               reduce using rule 33 (expression -> assignable .)
    +               reduce using rule 33 (expression -> assignable .)
    -               reduce using rule 33 (expression -> assignable .)
    *               reduce using rule 33 (expression -> assignable .)
    /               reduce using rule 33 (expression -> assignable .)
    DOTADD          reduce using rule 33 (expression -> assignable .)
    DOTSUB          reduce using rule 33 (expression -> assignable .)
    DOTMUL          reduce using rule 33 (expression -> assignable .)
    DOTDIV          reduce using rule 33 (expression -> assignable .)
    <               reduce using rule 33 (expression -> assignable .)
    >               reduce using rule 33 (expression -> assignable .)
    ELESS           reduce using rule 33 (expression -> assignable .)
    EGREATER        reduce using rule 33 (expression -> assignable .)
    EQUALS          reduce using rule 33 (expression -> assignable .)
    NEQUALS         reduce using rule 33 (expression -> assignable .)
    '               reduce using rule 33 (expression -> assignable .)
    ;               reduce using rule 33 (expression -> assignable .)
    ,               reduce using rule 33 (expression -> assignable .)
    ]               reduce using rule 33 (expression -> assignable .)
    :               reduce using rule 33 (expression -> assignable .)
    {               reduce using rule 33 (expression -> assignable .)
    BREAK           reduce using rule 33 (expression -> assignable .)
    CONTINUE        reduce using rule 33 (expression -> assignable .)
    IF              reduce using rule 33 (expression -> assignable .)
    FOR             reduce using rule 33 (expression -> assignable .)
    WHILE           reduce using rule 33 (expression -> assignable .)
    (               reduce using rule 33 (expression -> assignable .)
    INTNUM          reduce using rule 33 (expression -> assignable .)
    FLOATNUM        reduce using rule 33 (expression -> assignable .)
    RETURN          reduce using rule 33 (expression -> assignable .)
    PRINT           reduce using rule 33 (expression -> assignable .)
    ID              reduce using rule 33 (expression -> assignable .)
    [               reduce using rule 33 (expression -> assignable .)
    EYE             reduce using rule 33 (expression -> assignable .)
    ZEROS           reduce using rule 33 (expression -> assignable .)
    ONES            reduce using rule 33 (expression -> assignable .)


state 57

    (17) loop -> FOR ID . = expression : expression instructions

    =               shift and go to state 91


state 58

    (27) assignable -> ID [ . expression , expression ]
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 92
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 59

    (18) loop -> WHILE ( . expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 93
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 60

    (21) assignment -> assignable = . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 56
    expression                     shift and go to state 94
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 61

    (22) assignment -> assignable ADDASSIGN . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 56
    expression                     shift and go to state 95
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 62

    (23) assignment -> assignable SUBASSIGN . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 56
    expression                     shift and go to state 96
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 63

    (24) assignment -> assignable MULASSIGN . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 56
    expression                     shift and go to state 97
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 64

    (25) assignment -> assignable DIVASSIGN . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    assignable                     shift and go to state 56
    expression                     shift and go to state 98
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 65

    (38) expression -> matrix_function ( . expression )
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    matrix_function                shift and go to state 23
    expression                     shift and go to state 99
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22

state 66

    (43) expression -> - expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 43 (expression -> - expression .)
    +               reduce using rule 43 (expression -> - expression .)
    -               reduce using rule 43 (expression -> - expression .)
    *               reduce using rule 43 (expression -> - expression .)
    /               reduce using rule 43 (expression -> - expression .)
    DOTADD          reduce using rule 43 (expression -> - expression .)
    DOTSUB          reduce using rule 43 (expression -> - expression .)
    DOTMUL          reduce using rule 43 (expression -> - expression .)
    DOTDIV          reduce using rule 43 (expression -> - expression .)
    <               reduce using rule 43 (expression -> - expression .)
    >               reduce using rule 43 (expression -> - expression .)
    ELESS           reduce using rule 43 (expression -> - expression .)
    EGREATER        reduce using rule 43 (expression -> - expression .)
    EQUALS          reduce using rule 43 (expression -> - expression .)
    NEQUALS         reduce using rule 43 (expression -> - expression .)
    '               reduce using rule 43 (expression -> - expression .)
    )               reduce using rule 43 (expression -> - expression .)
    ,               reduce using rule 43 (expression -> - expression .)
    ]               reduce using rule 43 (expression -> - expression .)
    :               reduce using rule 43 (expression -> - expression .)
    {               reduce using rule 43 (expression -> - expression .)
    BREAK           reduce using rule 43 (expression -> - expression .)
    CONTINUE        reduce using rule 43 (expression -> - expression .)
    IF              reduce using rule 43 (expression -> - expression .)
    FOR             reduce using rule 43 (expression -> - expression .)
    WHILE           reduce using rule 43 (expression -> - expression .)
    (               reduce using rule 43 (expression -> - expression .)
    INTNUM          reduce using rule 43 (expression -> - expression .)
    FLOATNUM        reduce using rule 43 (expression -> - expression .)
    RETURN          reduce using rule 43 (expression -> - expression .)
    PRINT           reduce using rule 43 (expression -> - expression .)
    ID              reduce using rule 43 (expression -> - expression .)
    [               reduce using rule 43 (expression -> - expression .)
    EYE             reduce using rule 43 (expression -> - expression .)
    ZEROS           reduce using rule 43 (expression -> - expression .)
    ONES            reduce using rule 43 (expression -> - expression .)

  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]
  ! '               [ shift and go to state 48 ]


state 67

    (20) return -> RETURN expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 20 (return -> RETURN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 68

    (28) print -> PRINT printable_list .
    (29) printable_list -> printable_list . , printable

    ;               reduce using rule 28 (print -> PRINT printable_list .)
    ,               shift and go to state 100


state 69

    (30) printable_list -> printable .

    ,               reduce using rule 30 (printable_list -> printable .)
    ;               reduce using rule 30 (printable_list -> printable .)


state 70

    (31) printable -> STRING .

    ,               reduce using rule 31 (printable -> STRING .)
    ;               reduce using rule 31 (printable -> STRING .)


state 71

    (32) printable -> expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ,               reduce using rule 32 (printable -> expression .)
    ;               reduce using rule 32 (printable -> expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 72

    (57) nest_array_1 -> [ . nest_array_2 ]
    (58) nest_array_2 -> . nest_array_2 , expression
    (59) nest_array_2 -> . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    nest_array_2                   shift and go to state 101
    expression                     shift and go to state 102
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 73

    (55) matrix -> [ nest_array_1 . ]
    (56) nest_array_1 -> nest_array_1 . , [ nest_array_2 ]

    ]               shift and go to state 103
    ,               shift and go to state 104


state 74

    (6) instruction -> { instructions } .

    {               reduce using rule 6 (instruction -> { instructions } .)
    BREAK           reduce using rule 6 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 6 (instruction -> { instructions } .)
    IF              reduce using rule 6 (instruction -> { instructions } .)
    FOR             reduce using rule 6 (instruction -> { instructions } .)
    WHILE           reduce using rule 6 (instruction -> { instructions } .)
    (               reduce using rule 6 (instruction -> { instructions } .)
    INTNUM          reduce using rule 6 (instruction -> { instructions } .)
    FLOATNUM        reduce using rule 6 (instruction -> { instructions } .)
    -               reduce using rule 6 (instruction -> { instructions } .)
    RETURN          reduce using rule 6 (instruction -> { instructions } .)
    PRINT           reduce using rule 6 (instruction -> { instructions } .)
    ID              reduce using rule 6 (instruction -> { instructions } .)
    [               reduce using rule 6 (instruction -> { instructions } .)
    EYE             reduce using rule 6 (instruction -> { instructions } .)
    ZEROS           reduce using rule 6 (instruction -> { instructions } .)
    ONES            reduce using rule 6 (instruction -> { instructions } .)
    $end            reduce using rule 6 (instruction -> { instructions } .)
    }               reduce using rule 6 (instruction -> { instructions } .)
    ELSE            reduce using rule 6 (instruction -> { instructions } .)


state 75

    (39) expression -> expression + expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 39 (expression -> expression + expression .)
    +               reduce using rule 39 (expression -> expression + expression .)
    -               reduce using rule 39 (expression -> expression + expression .)
    <               reduce using rule 39 (expression -> expression + expression .)
    >               reduce using rule 39 (expression -> expression + expression .)
    ELESS           reduce using rule 39 (expression -> expression + expression .)
    EGREATER        reduce using rule 39 (expression -> expression + expression .)
    EQUALS          reduce using rule 39 (expression -> expression + expression .)
    NEQUALS         reduce using rule 39 (expression -> expression + expression .)
    )               reduce using rule 39 (expression -> expression + expression .)
    ,               reduce using rule 39 (expression -> expression + expression .)
    ]               reduce using rule 39 (expression -> expression + expression .)
    :               reduce using rule 39 (expression -> expression + expression .)
    {               reduce using rule 39 (expression -> expression + expression .)
    BREAK           reduce using rule 39 (expression -> expression + expression .)
    CONTINUE        reduce using rule 39 (expression -> expression + expression .)
    IF              reduce using rule 39 (expression -> expression + expression .)
    FOR             reduce using rule 39 (expression -> expression + expression .)
    WHILE           reduce using rule 39 (expression -> expression + expression .)
    (               reduce using rule 39 (expression -> expression + expression .)
    INTNUM          reduce using rule 39 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 39 (expression -> expression + expression .)
    RETURN          reduce using rule 39 (expression -> expression + expression .)
    PRINT           reduce using rule 39 (expression -> expression + expression .)
    ID              reduce using rule 39 (expression -> expression + expression .)
    [               reduce using rule 39 (expression -> expression + expression .)
    EYE             reduce using rule 39 (expression -> expression + expression .)
    ZEROS           reduce using rule 39 (expression -> expression + expression .)
    ONES            reduce using rule 39 (expression -> expression + expression .)
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! *               [ reduce using rule 39 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression + expression .) ]
  ! DOTADD          [ reduce using rule 39 (expression -> expression + expression .) ]
  ! DOTSUB          [ reduce using rule 39 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 39 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 39 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 39 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 76

    (40) expression -> expression - expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 40 (expression -> expression - expression .)
    +               reduce using rule 40 (expression -> expression - expression .)
    -               reduce using rule 40 (expression -> expression - expression .)
    <               reduce using rule 40 (expression -> expression - expression .)
    >               reduce using rule 40 (expression -> expression - expression .)
    ELESS           reduce using rule 40 (expression -> expression - expression .)
    EGREATER        reduce using rule 40 (expression -> expression - expression .)
    EQUALS          reduce using rule 40 (expression -> expression - expression .)
    NEQUALS         reduce using rule 40 (expression -> expression - expression .)
    )               reduce using rule 40 (expression -> expression - expression .)
    ,               reduce using rule 40 (expression -> expression - expression .)
    ]               reduce using rule 40 (expression -> expression - expression .)
    :               reduce using rule 40 (expression -> expression - expression .)
    {               reduce using rule 40 (expression -> expression - expression .)
    BREAK           reduce using rule 40 (expression -> expression - expression .)
    CONTINUE        reduce using rule 40 (expression -> expression - expression .)
    IF              reduce using rule 40 (expression -> expression - expression .)
    FOR             reduce using rule 40 (expression -> expression - expression .)
    WHILE           reduce using rule 40 (expression -> expression - expression .)
    (               reduce using rule 40 (expression -> expression - expression .)
    INTNUM          reduce using rule 40 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 40 (expression -> expression - expression .)
    RETURN          reduce using rule 40 (expression -> expression - expression .)
    PRINT           reduce using rule 40 (expression -> expression - expression .)
    ID              reduce using rule 40 (expression -> expression - expression .)
    [               reduce using rule 40 (expression -> expression - expression .)
    EYE             reduce using rule 40 (expression -> expression - expression .)
    ZEROS           reduce using rule 40 (expression -> expression - expression .)
    ONES            reduce using rule 40 (expression -> expression - expression .)
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! *               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 77

    (41) expression -> expression * expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 41 (expression -> expression * expression .)
    +               reduce using rule 41 (expression -> expression * expression .)
    -               reduce using rule 41 (expression -> expression * expression .)
    *               reduce using rule 41 (expression -> expression * expression .)
    /               reduce using rule 41 (expression -> expression * expression .)
    <               reduce using rule 41 (expression -> expression * expression .)
    >               reduce using rule 41 (expression -> expression * expression .)
    ELESS           reduce using rule 41 (expression -> expression * expression .)
    EGREATER        reduce using rule 41 (expression -> expression * expression .)
    EQUALS          reduce using rule 41 (expression -> expression * expression .)
    NEQUALS         reduce using rule 41 (expression -> expression * expression .)
    )               reduce using rule 41 (expression -> expression * expression .)
    ,               reduce using rule 41 (expression -> expression * expression .)
    ]               reduce using rule 41 (expression -> expression * expression .)
    :               reduce using rule 41 (expression -> expression * expression .)
    {               reduce using rule 41 (expression -> expression * expression .)
    BREAK           reduce using rule 41 (expression -> expression * expression .)
    CONTINUE        reduce using rule 41 (expression -> expression * expression .)
    IF              reduce using rule 41 (expression -> expression * expression .)
    FOR             reduce using rule 41 (expression -> expression * expression .)
    WHILE           reduce using rule 41 (expression -> expression * expression .)
    (               reduce using rule 41 (expression -> expression * expression .)
    INTNUM          reduce using rule 41 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 41 (expression -> expression * expression .)
    RETURN          reduce using rule 41 (expression -> expression * expression .)
    PRINT           reduce using rule 41 (expression -> expression * expression .)
    ID              reduce using rule 41 (expression -> expression * expression .)
    [               reduce using rule 41 (expression -> expression * expression .)
    EYE             reduce using rule 41 (expression -> expression * expression .)
    ZEROS           reduce using rule 41 (expression -> expression * expression .)
    ONES            reduce using rule 41 (expression -> expression * expression .)
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! DOTADD          [ reduce using rule 41 (expression -> expression * expression .) ]
  ! DOTSUB          [ reduce using rule 41 (expression -> expression * expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> expression * expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> expression * expression .) ]
  ! '               [ reduce using rule 41 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 78

    (42) expression -> expression / expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 42 (expression -> expression / expression .)
    +               reduce using rule 42 (expression -> expression / expression .)
    -               reduce using rule 42 (expression -> expression / expression .)
    *               reduce using rule 42 (expression -> expression / expression .)
    /               reduce using rule 42 (expression -> expression / expression .)
    <               reduce using rule 42 (expression -> expression / expression .)
    >               reduce using rule 42 (expression -> expression / expression .)
    ELESS           reduce using rule 42 (expression -> expression / expression .)
    EGREATER        reduce using rule 42 (expression -> expression / expression .)
    EQUALS          reduce using rule 42 (expression -> expression / expression .)
    NEQUALS         reduce using rule 42 (expression -> expression / expression .)
    )               reduce using rule 42 (expression -> expression / expression .)
    ,               reduce using rule 42 (expression -> expression / expression .)
    ]               reduce using rule 42 (expression -> expression / expression .)
    :               reduce using rule 42 (expression -> expression / expression .)
    {               reduce using rule 42 (expression -> expression / expression .)
    BREAK           reduce using rule 42 (expression -> expression / expression .)
    CONTINUE        reduce using rule 42 (expression -> expression / expression .)
    IF              reduce using rule 42 (expression -> expression / expression .)
    FOR             reduce using rule 42 (expression -> expression / expression .)
    WHILE           reduce using rule 42 (expression -> expression / expression .)
    (               reduce using rule 42 (expression -> expression / expression .)
    INTNUM          reduce using rule 42 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 42 (expression -> expression / expression .)
    RETURN          reduce using rule 42 (expression -> expression / expression .)
    PRINT           reduce using rule 42 (expression -> expression / expression .)
    ID              reduce using rule 42 (expression -> expression / expression .)
    [               reduce using rule 42 (expression -> expression / expression .)
    EYE             reduce using rule 42 (expression -> expression / expression .)
    ZEROS           reduce using rule 42 (expression -> expression / expression .)
    ONES            reduce using rule 42 (expression -> expression / expression .)
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! DOTADD          [ reduce using rule 42 (expression -> expression / expression .) ]
  ! DOTSUB          [ reduce using rule 42 (expression -> expression / expression .) ]
  ! DOTMUL          [ reduce using rule 42 (expression -> expression / expression .) ]
  ! DOTDIV          [ reduce using rule 42 (expression -> expression / expression .) ]
  ! '               [ reduce using rule 42 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 79

    (44) expression -> expression DOTADD expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 44 (expression -> expression DOTADD expression .)
    +               reduce using rule 44 (expression -> expression DOTADD expression .)
    -               reduce using rule 44 (expression -> expression DOTADD expression .)
    *               reduce using rule 44 (expression -> expression DOTADD expression .)
    /               reduce using rule 44 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 44 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 44 (expression -> expression DOTADD expression .)
    <               reduce using rule 44 (expression -> expression DOTADD expression .)
    >               reduce using rule 44 (expression -> expression DOTADD expression .)
    ELESS           reduce using rule 44 (expression -> expression DOTADD expression .)
    EGREATER        reduce using rule 44 (expression -> expression DOTADD expression .)
    EQUALS          reduce using rule 44 (expression -> expression DOTADD expression .)
    NEQUALS         reduce using rule 44 (expression -> expression DOTADD expression .)
    )               reduce using rule 44 (expression -> expression DOTADD expression .)
    ,               reduce using rule 44 (expression -> expression DOTADD expression .)
    ]               reduce using rule 44 (expression -> expression DOTADD expression .)
    :               reduce using rule 44 (expression -> expression DOTADD expression .)
    {               reduce using rule 44 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 44 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 44 (expression -> expression DOTADD expression .)
    IF              reduce using rule 44 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 44 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 44 (expression -> expression DOTADD expression .)
    (               reduce using rule 44 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 44 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 44 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 44 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 44 (expression -> expression DOTADD expression .)
    ID              reduce using rule 44 (expression -> expression DOTADD expression .)
    [               reduce using rule 44 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 44 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 44 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 44 (expression -> expression DOTADD expression .)
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! DOTMUL          [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 80

    (45) expression -> expression DOTSUB expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 45 (expression -> expression DOTSUB expression .)
    +               reduce using rule 45 (expression -> expression DOTSUB expression .)
    -               reduce using rule 45 (expression -> expression DOTSUB expression .)
    *               reduce using rule 45 (expression -> expression DOTSUB expression .)
    /               reduce using rule 45 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 45 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 45 (expression -> expression DOTSUB expression .)
    <               reduce using rule 45 (expression -> expression DOTSUB expression .)
    >               reduce using rule 45 (expression -> expression DOTSUB expression .)
    ELESS           reduce using rule 45 (expression -> expression DOTSUB expression .)
    EGREATER        reduce using rule 45 (expression -> expression DOTSUB expression .)
    EQUALS          reduce using rule 45 (expression -> expression DOTSUB expression .)
    NEQUALS         reduce using rule 45 (expression -> expression DOTSUB expression .)
    )               reduce using rule 45 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 45 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 45 (expression -> expression DOTSUB expression .)
    :               reduce using rule 45 (expression -> expression DOTSUB expression .)
    {               reduce using rule 45 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 45 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 45 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 45 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 45 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 45 (expression -> expression DOTSUB expression .)
    (               reduce using rule 45 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 45 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 45 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 45 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 45 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 45 (expression -> expression DOTSUB expression .)
    [               reduce using rule 45 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 45 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 45 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 45 (expression -> expression DOTSUB expression .)
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! DOTMUL          [ reduce using rule 45 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 45 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 45 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 81

    (46) expression -> expression DOTMUL expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 46 (expression -> expression DOTMUL expression .)
    +               reduce using rule 46 (expression -> expression DOTMUL expression .)
    -               reduce using rule 46 (expression -> expression DOTMUL expression .)
    *               reduce using rule 46 (expression -> expression DOTMUL expression .)
    /               reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 46 (expression -> expression DOTMUL expression .)
    <               reduce using rule 46 (expression -> expression DOTMUL expression .)
    >               reduce using rule 46 (expression -> expression DOTMUL expression .)
    ELESS           reduce using rule 46 (expression -> expression DOTMUL expression .)
    EGREATER        reduce using rule 46 (expression -> expression DOTMUL expression .)
    EQUALS          reduce using rule 46 (expression -> expression DOTMUL expression .)
    NEQUALS         reduce using rule 46 (expression -> expression DOTMUL expression .)
    )               reduce using rule 46 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 46 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 46 (expression -> expression DOTMUL expression .)
    :               reduce using rule 46 (expression -> expression DOTMUL expression .)
    {               reduce using rule 46 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 46 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 46 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 46 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 46 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 46 (expression -> expression DOTMUL expression .)
    (               reduce using rule 46 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 46 (expression -> expression DOTMUL expression .)
    FLOATNUM        reduce using rule 46 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 46 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 46 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 46 (expression -> expression DOTMUL expression .)
    [               reduce using rule 46 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 46 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 46 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 46 (expression -> expression DOTMUL expression .)
    '               shift and go to state 48

  ! '               [ reduce using rule 46 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 82

    (47) expression -> expression DOTDIV expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 47 (expression -> expression DOTDIV expression .)
    +               reduce using rule 47 (expression -> expression DOTDIV expression .)
    -               reduce using rule 47 (expression -> expression DOTDIV expression .)
    *               reduce using rule 47 (expression -> expression DOTDIV expression .)
    /               reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 47 (expression -> expression DOTDIV expression .)
    <               reduce using rule 47 (expression -> expression DOTDIV expression .)
    >               reduce using rule 47 (expression -> expression DOTDIV expression .)
    ELESS           reduce using rule 47 (expression -> expression DOTDIV expression .)
    EGREATER        reduce using rule 47 (expression -> expression DOTDIV expression .)
    EQUALS          reduce using rule 47 (expression -> expression DOTDIV expression .)
    NEQUALS         reduce using rule 47 (expression -> expression DOTDIV expression .)
    )               reduce using rule 47 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 47 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 47 (expression -> expression DOTDIV expression .)
    :               reduce using rule 47 (expression -> expression DOTDIV expression .)
    {               reduce using rule 47 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 47 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 47 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 47 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 47 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 47 (expression -> expression DOTDIV expression .)
    (               reduce using rule 47 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 47 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 47 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 47 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 47 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 47 (expression -> expression DOTDIV expression .)
    [               reduce using rule 47 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 47 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 47 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 47 (expression -> expression DOTDIV expression .)
    '               shift and go to state 48

  ! '               [ reduce using rule 47 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTADD          [ shift and go to state 38 ]
  ! DOTSUB          [ shift and go to state 39 ]
  ! DOTMUL          [ shift and go to state 40 ]
  ! DOTDIV          [ shift and go to state 41 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 83

    (48) expression -> expression < expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 48 (expression -> expression < expression .)
    <               reduce using rule 48 (expression -> expression < expression .)
    >               reduce using rule 48 (expression -> expression < expression .)
    ELESS           reduce using rule 48 (expression -> expression < expression .)
    EGREATER        reduce using rule 48 (expression -> expression < expression .)
    EQUALS          reduce using rule 48 (expression -> expression < expression .)
    NEQUALS         reduce using rule 48 (expression -> expression < expression .)
    )               reduce using rule 48 (expression -> expression < expression .)
    ,               reduce using rule 48 (expression -> expression < expression .)
    ]               reduce using rule 48 (expression -> expression < expression .)
    :               reduce using rule 48 (expression -> expression < expression .)
    {               reduce using rule 48 (expression -> expression < expression .)
    BREAK           reduce using rule 48 (expression -> expression < expression .)
    CONTINUE        reduce using rule 48 (expression -> expression < expression .)
    IF              reduce using rule 48 (expression -> expression < expression .)
    FOR             reduce using rule 48 (expression -> expression < expression .)
    WHILE           reduce using rule 48 (expression -> expression < expression .)
    (               reduce using rule 48 (expression -> expression < expression .)
    INTNUM          reduce using rule 48 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 48 (expression -> expression < expression .)
    RETURN          reduce using rule 48 (expression -> expression < expression .)
    PRINT           reduce using rule 48 (expression -> expression < expression .)
    ID              reduce using rule 48 (expression -> expression < expression .)
    [               reduce using rule 48 (expression -> expression < expression .)
    EYE             reduce using rule 48 (expression -> expression < expression .)
    ZEROS           reduce using rule 48 (expression -> expression < expression .)
    ONES            reduce using rule 48 (expression -> expression < expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! +               [ reduce using rule 48 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 48 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 48 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 48 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 48 (expression -> expression < expression .) ]
  ! DOTMUL          [ reduce using rule 48 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 48 (expression -> expression < expression .) ]
  ! '               [ reduce using rule 48 (expression -> expression < expression .) ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 84

    (49) expression -> expression > expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 49 (expression -> expression > expression .)
    <               reduce using rule 49 (expression -> expression > expression .)
    >               reduce using rule 49 (expression -> expression > expression .)
    ELESS           reduce using rule 49 (expression -> expression > expression .)
    EGREATER        reduce using rule 49 (expression -> expression > expression .)
    EQUALS          reduce using rule 49 (expression -> expression > expression .)
    NEQUALS         reduce using rule 49 (expression -> expression > expression .)
    )               reduce using rule 49 (expression -> expression > expression .)
    ,               reduce using rule 49 (expression -> expression > expression .)
    ]               reduce using rule 49 (expression -> expression > expression .)
    :               reduce using rule 49 (expression -> expression > expression .)
    {               reduce using rule 49 (expression -> expression > expression .)
    BREAK           reduce using rule 49 (expression -> expression > expression .)
    CONTINUE        reduce using rule 49 (expression -> expression > expression .)
    IF              reduce using rule 49 (expression -> expression > expression .)
    FOR             reduce using rule 49 (expression -> expression > expression .)
    WHILE           reduce using rule 49 (expression -> expression > expression .)
    (               reduce using rule 49 (expression -> expression > expression .)
    INTNUM          reduce using rule 49 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 49 (expression -> expression > expression .)
    RETURN          reduce using rule 49 (expression -> expression > expression .)
    PRINT           reduce using rule 49 (expression -> expression > expression .)
    ID              reduce using rule 49 (expression -> expression > expression .)
    [               reduce using rule 49 (expression -> expression > expression .)
    EYE             reduce using rule 49 (expression -> expression > expression .)
    ZEROS           reduce using rule 49 (expression -> expression > expression .)
    ONES            reduce using rule 49 (expression -> expression > expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! +               [ reduce using rule 49 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 49 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 49 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 49 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 49 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 49 (expression -> expression > expression .) ]
  ! DOTMUL          [ reduce using rule 49 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 49 (expression -> expression > expression .) ]
  ! '               [ reduce using rule 49 (expression -> expression > expression .) ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 85

    (50) expression -> expression ELESS expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 50 (expression -> expression ELESS expression .)
    <               reduce using rule 50 (expression -> expression ELESS expression .)
    >               reduce using rule 50 (expression -> expression ELESS expression .)
    ELESS           reduce using rule 50 (expression -> expression ELESS expression .)
    EGREATER        reduce using rule 50 (expression -> expression ELESS expression .)
    EQUALS          reduce using rule 50 (expression -> expression ELESS expression .)
    NEQUALS         reduce using rule 50 (expression -> expression ELESS expression .)
    )               reduce using rule 50 (expression -> expression ELESS expression .)
    ,               reduce using rule 50 (expression -> expression ELESS expression .)
    ]               reduce using rule 50 (expression -> expression ELESS expression .)
    :               reduce using rule 50 (expression -> expression ELESS expression .)
    {               reduce using rule 50 (expression -> expression ELESS expression .)
    BREAK           reduce using rule 50 (expression -> expression ELESS expression .)
    CONTINUE        reduce using rule 50 (expression -> expression ELESS expression .)
    IF              reduce using rule 50 (expression -> expression ELESS expression .)
    FOR             reduce using rule 50 (expression -> expression ELESS expression .)
    WHILE           reduce using rule 50 (expression -> expression ELESS expression .)
    (               reduce using rule 50 (expression -> expression ELESS expression .)
    INTNUM          reduce using rule 50 (expression -> expression ELESS expression .)
    FLOATNUM        reduce using rule 50 (expression -> expression ELESS expression .)
    RETURN          reduce using rule 50 (expression -> expression ELESS expression .)
    PRINT           reduce using rule 50 (expression -> expression ELESS expression .)
    ID              reduce using rule 50 (expression -> expression ELESS expression .)
    [               reduce using rule 50 (expression -> expression ELESS expression .)
    EYE             reduce using rule 50 (expression -> expression ELESS expression .)
    ZEROS           reduce using rule 50 (expression -> expression ELESS expression .)
    ONES            reduce using rule 50 (expression -> expression ELESS expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! +               [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! -               [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! *               [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! /               [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! DOTADD          [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! DOTSUB          [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! DOTMUL          [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! DOTDIV          [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! '               [ reduce using rule 50 (expression -> expression ELESS expression .) ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 86

    (51) expression -> expression EGREATER expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 51 (expression -> expression EGREATER expression .)
    <               reduce using rule 51 (expression -> expression EGREATER expression .)
    >               reduce using rule 51 (expression -> expression EGREATER expression .)
    ELESS           reduce using rule 51 (expression -> expression EGREATER expression .)
    EGREATER        reduce using rule 51 (expression -> expression EGREATER expression .)
    EQUALS          reduce using rule 51 (expression -> expression EGREATER expression .)
    NEQUALS         reduce using rule 51 (expression -> expression EGREATER expression .)
    )               reduce using rule 51 (expression -> expression EGREATER expression .)
    ,               reduce using rule 51 (expression -> expression EGREATER expression .)
    ]               reduce using rule 51 (expression -> expression EGREATER expression .)
    :               reduce using rule 51 (expression -> expression EGREATER expression .)
    {               reduce using rule 51 (expression -> expression EGREATER expression .)
    BREAK           reduce using rule 51 (expression -> expression EGREATER expression .)
    CONTINUE        reduce using rule 51 (expression -> expression EGREATER expression .)
    IF              reduce using rule 51 (expression -> expression EGREATER expression .)
    FOR             reduce using rule 51 (expression -> expression EGREATER expression .)
    WHILE           reduce using rule 51 (expression -> expression EGREATER expression .)
    (               reduce using rule 51 (expression -> expression EGREATER expression .)
    INTNUM          reduce using rule 51 (expression -> expression EGREATER expression .)
    FLOATNUM        reduce using rule 51 (expression -> expression EGREATER expression .)
    RETURN          reduce using rule 51 (expression -> expression EGREATER expression .)
    PRINT           reduce using rule 51 (expression -> expression EGREATER expression .)
    ID              reduce using rule 51 (expression -> expression EGREATER expression .)
    [               reduce using rule 51 (expression -> expression EGREATER expression .)
    EYE             reduce using rule 51 (expression -> expression EGREATER expression .)
    ZEROS           reduce using rule 51 (expression -> expression EGREATER expression .)
    ONES            reduce using rule 51 (expression -> expression EGREATER expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! +               [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! -               [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! *               [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! DOTADD          [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! DOTSUB          [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! DOTMUL          [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! DOTDIV          [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! '               [ reduce using rule 51 (expression -> expression EGREATER expression .) ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 87

    (52) expression -> expression EQUALS expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 52 (expression -> expression EQUALS expression .)
    <               reduce using rule 52 (expression -> expression EQUALS expression .)
    >               reduce using rule 52 (expression -> expression EQUALS expression .)
    ELESS           reduce using rule 52 (expression -> expression EQUALS expression .)
    EGREATER        reduce using rule 52 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 52 (expression -> expression EQUALS expression .)
    NEQUALS         reduce using rule 52 (expression -> expression EQUALS expression .)
    )               reduce using rule 52 (expression -> expression EQUALS expression .)
    ,               reduce using rule 52 (expression -> expression EQUALS expression .)
    ]               reduce using rule 52 (expression -> expression EQUALS expression .)
    :               reduce using rule 52 (expression -> expression EQUALS expression .)
    {               reduce using rule 52 (expression -> expression EQUALS expression .)
    BREAK           reduce using rule 52 (expression -> expression EQUALS expression .)
    CONTINUE        reduce using rule 52 (expression -> expression EQUALS expression .)
    IF              reduce using rule 52 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 52 (expression -> expression EQUALS expression .)
    WHILE           reduce using rule 52 (expression -> expression EQUALS expression .)
    (               reduce using rule 52 (expression -> expression EQUALS expression .)
    INTNUM          reduce using rule 52 (expression -> expression EQUALS expression .)
    FLOATNUM        reduce using rule 52 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 52 (expression -> expression EQUALS expression .)
    PRINT           reduce using rule 52 (expression -> expression EQUALS expression .)
    ID              reduce using rule 52 (expression -> expression EQUALS expression .)
    [               reduce using rule 52 (expression -> expression EQUALS expression .)
    EYE             reduce using rule 52 (expression -> expression EQUALS expression .)
    ZEROS           reduce using rule 52 (expression -> expression EQUALS expression .)
    ONES            reduce using rule 52 (expression -> expression EQUALS expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! +               [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! -               [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! *               [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! /               [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! DOTADD          [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! DOTSUB          [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! DOTMUL          [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! DOTDIV          [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! '               [ reduce using rule 52 (expression -> expression EQUALS expression .) ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 88

    (53) expression -> expression NEQUALS expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 53 (expression -> expression NEQUALS expression .)
    <               reduce using rule 53 (expression -> expression NEQUALS expression .)
    >               reduce using rule 53 (expression -> expression NEQUALS expression .)
    ELESS           reduce using rule 53 (expression -> expression NEQUALS expression .)
    EGREATER        reduce using rule 53 (expression -> expression NEQUALS expression .)
    EQUALS          reduce using rule 53 (expression -> expression NEQUALS expression .)
    NEQUALS         reduce using rule 53 (expression -> expression NEQUALS expression .)
    )               reduce using rule 53 (expression -> expression NEQUALS expression .)
    ,               reduce using rule 53 (expression -> expression NEQUALS expression .)
    ]               reduce using rule 53 (expression -> expression NEQUALS expression .)
    :               reduce using rule 53 (expression -> expression NEQUALS expression .)
    {               reduce using rule 53 (expression -> expression NEQUALS expression .)
    BREAK           reduce using rule 53 (expression -> expression NEQUALS expression .)
    CONTINUE        reduce using rule 53 (expression -> expression NEQUALS expression .)
    IF              reduce using rule 53 (expression -> expression NEQUALS expression .)
    FOR             reduce using rule 53 (expression -> expression NEQUALS expression .)
    WHILE           reduce using rule 53 (expression -> expression NEQUALS expression .)
    (               reduce using rule 53 (expression -> expression NEQUALS expression .)
    INTNUM          reduce using rule 53 (expression -> expression NEQUALS expression .)
    FLOATNUM        reduce using rule 53 (expression -> expression NEQUALS expression .)
    RETURN          reduce using rule 53 (expression -> expression NEQUALS expression .)
    PRINT           reduce using rule 53 (expression -> expression NEQUALS expression .)
    ID              reduce using rule 53 (expression -> expression NEQUALS expression .)
    [               reduce using rule 53 (expression -> expression NEQUALS expression .)
    EYE             reduce using rule 53 (expression -> expression NEQUALS expression .)
    ZEROS           reduce using rule 53 (expression -> expression NEQUALS expression .)
    ONES            reduce using rule 53 (expression -> expression NEQUALS expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! +               [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! -               [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! *               [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! /               [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! DOTADD          [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! DOTSUB          [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! DOTMUL          [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! DOTDIV          [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! '               [ reduce using rule 53 (expression -> expression NEQUALS expression .) ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]


state 89

    (15) if -> IF ( expression . ) instructions
    (16) if -> IF ( expression . ) instructions ELSE instructions
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    )               shift and go to state 105
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 90

    (34) expression -> ( expression ) .

    ;               reduce using rule 34 (expression -> ( expression ) .)
    +               reduce using rule 34 (expression -> ( expression ) .)
    -               reduce using rule 34 (expression -> ( expression ) .)
    *               reduce using rule 34 (expression -> ( expression ) .)
    /               reduce using rule 34 (expression -> ( expression ) .)
    DOTADD          reduce using rule 34 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 34 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 34 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 34 (expression -> ( expression ) .)
    <               reduce using rule 34 (expression -> ( expression ) .)
    >               reduce using rule 34 (expression -> ( expression ) .)
    ELESS           reduce using rule 34 (expression -> ( expression ) .)
    EGREATER        reduce using rule 34 (expression -> ( expression ) .)
    EQUALS          reduce using rule 34 (expression -> ( expression ) .)
    NEQUALS         reduce using rule 34 (expression -> ( expression ) .)
    '               reduce using rule 34 (expression -> ( expression ) .)
    )               reduce using rule 34 (expression -> ( expression ) .)
    ,               reduce using rule 34 (expression -> ( expression ) .)
    ]               reduce using rule 34 (expression -> ( expression ) .)
    :               reduce using rule 34 (expression -> ( expression ) .)
    {               reduce using rule 34 (expression -> ( expression ) .)
    BREAK           reduce using rule 34 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 34 (expression -> ( expression ) .)
    IF              reduce using rule 34 (expression -> ( expression ) .)
    FOR             reduce using rule 34 (expression -> ( expression ) .)
    WHILE           reduce using rule 34 (expression -> ( expression ) .)
    (               reduce using rule 34 (expression -> ( expression ) .)
    INTNUM          reduce using rule 34 (expression -> ( expression ) .)
    FLOATNUM        reduce using rule 34 (expression -> ( expression ) .)
    RETURN          reduce using rule 34 (expression -> ( expression ) .)
    PRINT           reduce using rule 34 (expression -> ( expression ) .)
    ID              reduce using rule 34 (expression -> ( expression ) .)
    [               reduce using rule 34 (expression -> ( expression ) .)
    EYE             reduce using rule 34 (expression -> ( expression ) .)
    ZEROS           reduce using rule 34 (expression -> ( expression ) .)
    ONES            reduce using rule 34 (expression -> ( expression ) .)


state 91

    (17) loop -> FOR ID = . expression : expression instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 106
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 92

    (27) assignable -> ID [ expression . , expression ]
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ,               shift and go to state 107
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 93

    (18) loop -> WHILE ( expression . ) instructions
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    )               shift and go to state 108
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 94

    (21) assignment -> assignable = expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 21 (assignment -> assignable = expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 95

    (22) assignment -> assignable ADDASSIGN expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 22 (assignment -> assignable ADDASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 96

    (23) assignment -> assignable SUBASSIGN expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 23 (assignment -> assignable SUBASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 97

    (24) assignment -> assignable MULASSIGN expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 24 (assignment -> assignable MULASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 98

    (25) assignment -> assignable DIVASSIGN expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ;               reduce using rule 25 (assignment -> assignable DIVASSIGN expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 99

    (38) expression -> matrix_function ( expression . )
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    )               shift and go to state 109
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 100

    (29) printable_list -> printable_list , . printable
    (31) printable -> . STRING
    (32) printable -> . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    STRING          shift and go to state 70
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    printable                      shift and go to state 110
    expression                     shift and go to state 71
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 101

    (57) nest_array_1 -> [ nest_array_2 . ]
    (58) nest_array_2 -> nest_array_2 . , expression

    ]               shift and go to state 111
    ,               shift and go to state 112


state 102

    (59) nest_array_2 -> expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ]               reduce using rule 59 (nest_array_2 -> expression .)
    ,               reduce using rule 59 (nest_array_2 -> expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 103

    (55) matrix -> [ nest_array_1 ] .

    ;               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    +               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    -               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    *               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    /               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    DOTADD          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    DOTSUB          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    DOTMUL          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    DOTDIV          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    <               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    >               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    ELESS           reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    EGREATER        reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    EQUALS          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    NEQUALS         reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    '               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    )               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    ,               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    ]               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    :               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    {               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    BREAK           reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    CONTINUE        reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    IF              reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    FOR             reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    WHILE           reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    (               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    INTNUM          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    FLOATNUM        reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    RETURN          reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    PRINT           reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    ID              reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    [               reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    EYE             reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    ZEROS           reduce using rule 55 (matrix -> [ nest_array_1 ] .)
    ONES            reduce using rule 55 (matrix -> [ nest_array_1 ] .)


state 104

    (56) nest_array_1 -> nest_array_1 , . [ nest_array_2 ]

    [               shift and go to state 113


state 105

    (15) if -> IF ( expression ) . instructions
    (16) if -> IF ( expression ) . instructions ELSE instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 8
    instructions                   shift and go to state 114
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 106

    (17) loop -> FOR ID = expression . : expression instructions
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    :               shift and go to state 115
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 107

    (27) assignable -> ID [ expression , . expression ]
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 116
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 108

    (18) loop -> WHILE ( expression ) . instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 8
    instructions                   shift and go to state 117
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 109

    (38) expression -> matrix_function ( expression ) .

    ;               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    +               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    -               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    *               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    /               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    DOTADD          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    DOTSUB          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    DOTMUL          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    DOTDIV          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    <               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    >               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    ELESS           reduce using rule 38 (expression -> matrix_function ( expression ) .)
    EGREATER        reduce using rule 38 (expression -> matrix_function ( expression ) .)
    EQUALS          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    NEQUALS         reduce using rule 38 (expression -> matrix_function ( expression ) .)
    '               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    )               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    ,               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    ]               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    :               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    {               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    BREAK           reduce using rule 38 (expression -> matrix_function ( expression ) .)
    CONTINUE        reduce using rule 38 (expression -> matrix_function ( expression ) .)
    IF              reduce using rule 38 (expression -> matrix_function ( expression ) .)
    FOR             reduce using rule 38 (expression -> matrix_function ( expression ) .)
    WHILE           reduce using rule 38 (expression -> matrix_function ( expression ) .)
    (               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    INTNUM          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    FLOATNUM        reduce using rule 38 (expression -> matrix_function ( expression ) .)
    RETURN          reduce using rule 38 (expression -> matrix_function ( expression ) .)
    PRINT           reduce using rule 38 (expression -> matrix_function ( expression ) .)
    ID              reduce using rule 38 (expression -> matrix_function ( expression ) .)
    [               reduce using rule 38 (expression -> matrix_function ( expression ) .)
    EYE             reduce using rule 38 (expression -> matrix_function ( expression ) .)
    ZEROS           reduce using rule 38 (expression -> matrix_function ( expression ) .)
    ONES            reduce using rule 38 (expression -> matrix_function ( expression ) .)


state 110

    (29) printable_list -> printable_list , printable .

    ,               reduce using rule 29 (printable_list -> printable_list , printable .)
    ;               reduce using rule 29 (printable_list -> printable_list , printable .)


state 111

    (57) nest_array_1 -> [ nest_array_2 ] .

    ]               reduce using rule 57 (nest_array_1 -> [ nest_array_2 ] .)
    ,               reduce using rule 57 (nest_array_1 -> [ nest_array_2 ] .)


state 112

    (58) nest_array_2 -> nest_array_2 , . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 118
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 113

    (56) nest_array_1 -> nest_array_1 , [ . nest_array_2 ]
    (58) nest_array_2 -> . nest_array_2 , expression
    (59) nest_array_2 -> . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    nest_array_2                   shift and go to state 119
    expression                     shift and go to state 102
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 114

    (15) if -> IF ( expression ) instructions .
    (16) if -> IF ( expression ) instructions . ELSE instructions
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    {               reduce using rule 15 (if -> IF ( expression ) instructions .)
    BREAK           reduce using rule 15 (if -> IF ( expression ) instructions .)
    CONTINUE        reduce using rule 15 (if -> IF ( expression ) instructions .)
    IF              reduce using rule 15 (if -> IF ( expression ) instructions .)
    FOR             reduce using rule 15 (if -> IF ( expression ) instructions .)
    WHILE           reduce using rule 15 (if -> IF ( expression ) instructions .)
    (               reduce using rule 15 (if -> IF ( expression ) instructions .)
    INTNUM          reduce using rule 15 (if -> IF ( expression ) instructions .)
    FLOATNUM        reduce using rule 15 (if -> IF ( expression ) instructions .)
    -               reduce using rule 15 (if -> IF ( expression ) instructions .)
    RETURN          reduce using rule 15 (if -> IF ( expression ) instructions .)
    PRINT           reduce using rule 15 (if -> IF ( expression ) instructions .)
    ID              reduce using rule 15 (if -> IF ( expression ) instructions .)
    [               reduce using rule 15 (if -> IF ( expression ) instructions .)
    EYE             reduce using rule 15 (if -> IF ( expression ) instructions .)
    ZEROS           reduce using rule 15 (if -> IF ( expression ) instructions .)
    ONES            reduce using rule 15 (if -> IF ( expression ) instructions .)
    $end            reduce using rule 15 (if -> IF ( expression ) instructions .)
    }               reduce using rule 15 (if -> IF ( expression ) instructions .)
    ELSE            shift and go to state 120

  ! ELSE            [ reduce using rule 15 (if -> IF ( expression ) instructions .) ]
  ! {               [ shift and go to state 5 ]
  ! BREAK           [ shift and go to state 12 ]
  ! CONTINUE        [ shift and go to state 13 ]
  ! IF              [ shift and go to state 14 ]
  ! FOR             [ shift and go to state 16 ]
  ! WHILE           [ shift and go to state 18 ]
  ! (               [ shift and go to state 15 ]
  ! INTNUM          [ shift and go to state 20 ]
  ! FLOATNUM        [ shift and go to state 21 ]
  ! -               [ shift and go to state 24 ]
  ! RETURN          [ shift and go to state 25 ]
  ! PRINT           [ shift and go to state 26 ]
  ! ID              [ shift and go to state 17 ]
  ! [               [ shift and go to state 27 ]
  ! EYE             [ shift and go to state 28 ]
  ! ZEROS           [ shift and go to state 29 ]
  ! ONES            [ shift and go to state 30 ]

    expression                     shift and go to state 8
    instruction                    shift and go to state 31
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 115

    (17) loop -> FOR ID = expression : . expression instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 121
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 116

    (27) assignable -> ID [ expression , expression . ]
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ]               shift and go to state 122
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 117

    (18) loop -> WHILE ( expression ) instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

  ! shift/reduce conflict for { resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTNUM resolved as shift
  ! shift/reduce conflict for FLOATNUM resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for EYE resolved as shift
  ! shift/reduce conflict for ZEROS resolved as shift
  ! shift/reduce conflict for ONES resolved as shift
    $end            reduce using rule 18 (loop -> WHILE ( expression ) instructions .)
    }               reduce using rule 18 (loop -> WHILE ( expression ) instructions .)
    ELSE            reduce using rule 18 (loop -> WHILE ( expression ) instructions .)
    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

  ! {               [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! BREAK           [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! CONTINUE        [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! IF              [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! FOR             [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! WHILE           [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! (               [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! INTNUM          [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! FLOATNUM        [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! -               [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! RETURN          [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! PRINT           [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! ID              [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! [               [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! EYE             [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! ZEROS           [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]
  ! ONES            [ reduce using rule 18 (loop -> WHILE ( expression ) instructions .) ]

    expression                     shift and go to state 8
    instruction                    shift and go to state 31
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 118

    (58) nest_array_2 -> nest_array_2 , expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

    ]               reduce using rule 58 (nest_array_2 -> nest_array_2 , expression .)
    ,               reduce using rule 58 (nest_array_2 -> nest_array_2 , expression .)
    +               shift and go to state 34
    -               shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48


state 119

    (56) nest_array_1 -> nest_array_1 , [ nest_array_2 . ]
    (58) nest_array_2 -> nest_array_2 . , expression

    ]               shift and go to state 123
    ,               shift and go to state 112


state 120

    (16) if -> IF ( expression ) instructions ELSE . instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 8
    instructions                   shift and go to state 124
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 121

    (17) loop -> FOR ID = expression : expression . instructions
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    +               shift and go to state 34
    -               shift and go to state 126
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    <               shift and go to state 42
    >               shift and go to state 43
    ELESS           shift and go to state 44
    EGREATER        shift and go to state 45
    EQUALS          shift and go to state 46
    NEQUALS         shift and go to state 47
    '               shift and go to state 48
    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 8
    instructions                   shift and go to state 125
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 122

    (27) assignable -> ID [ expression , expression ] .

    =               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ;               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    +               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    -               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    *               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    /               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    <               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    >               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ELESS           reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    EGREATER        reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    EQUALS          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    NEQUALS         reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    '               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    )               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ,               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ]               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    :               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    {               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    BREAK           reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    IF              reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    FOR             reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    WHILE           reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    (               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    INTNUM          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    FLOATNUM        reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    RETURN          reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    PRINT           reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ID              reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    [               reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    EYE             reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ZEROS           reduce using rule 27 (assignable -> ID [ expression , expression ] .)
    ONES            reduce using rule 27 (assignable -> ID [ expression , expression ] .)


state 123

    (56) nest_array_1 -> nest_array_1 , [ nest_array_2 ] .

    ]               reduce using rule 56 (nest_array_1 -> nest_array_1 , [ nest_array_2 ] .)
    ,               reduce using rule 56 (nest_array_1 -> nest_array_1 , [ nest_array_2 ] .)


state 124

    (16) if -> IF ( expression ) instructions ELSE instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    {               reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    BREAK           reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    CONTINUE        reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    IF              reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    FOR             reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    WHILE           reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    (               reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    INTNUM          reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    FLOATNUM        reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    -               reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    RETURN          reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    PRINT           reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    ID              reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    [               reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    EYE             reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    ZEROS           reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    ONES            reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    $end            reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    }               reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)
    ELSE            reduce using rule 16 (if -> IF ( expression ) instructions ELSE instructions .)

  ! {               [ shift and go to state 5 ]
  ! BREAK           [ shift and go to state 12 ]
  ! CONTINUE        [ shift and go to state 13 ]
  ! IF              [ shift and go to state 14 ]
  ! FOR             [ shift and go to state 16 ]
  ! WHILE           [ shift and go to state 18 ]
  ! (               [ shift and go to state 15 ]
  ! INTNUM          [ shift and go to state 20 ]
  ! FLOATNUM        [ shift and go to state 21 ]
  ! -               [ shift and go to state 24 ]
  ! RETURN          [ shift and go to state 25 ]
  ! PRINT           [ shift and go to state 26 ]
  ! ID              [ shift and go to state 17 ]
  ! [               [ shift and go to state 27 ]
  ! EYE             [ shift and go to state 28 ]
  ! ZEROS           [ shift and go to state 29 ]
  ! ONES            [ shift and go to state 30 ]

    expression                     shift and go to state 8
    instruction                    shift and go to state 31
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 125

    (17) loop -> FOR ID = expression : expression instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . expression ;
    (10) instruction -> . return ;
    (11) instruction -> . assignment ;
    (12) instruction -> . print ;
    (13) instruction -> . BREAK ;
    (14) instruction -> . CONTINUE ;
    (15) if -> . IF ( expression ) instructions
    (16) if -> . IF ( expression ) instructions ELSE instructions
    (17) loop -> . FOR ID = expression : expression instructions
    (18) loop -> . WHILE ( expression ) instructions
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (19) return -> . RETURN
    (20) return -> . RETURN expression
    (21) assignment -> . assignable = expression
    (22) assignment -> . assignable ADDASSIGN expression
    (23) assignment -> . assignable SUBASSIGN expression
    (24) assignment -> . assignable MULASSIGN expression
    (25) assignment -> . assignable DIVASSIGN expression
    (28) print -> . PRINT printable_list
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

  ! shift/reduce conflict for { resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTNUM resolved as shift
  ! shift/reduce conflict for FLOATNUM resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for EYE resolved as shift
  ! shift/reduce conflict for ZEROS resolved as shift
  ! shift/reduce conflict for ONES resolved as shift
    $end            reduce using rule 17 (loop -> FOR ID = expression : expression instructions .)
    }               reduce using rule 17 (loop -> FOR ID = expression : expression instructions .)
    ELSE            reduce using rule 17 (loop -> FOR ID = expression : expression instructions .)
    {               shift and go to state 5
    BREAK           shift and go to state 12
    CONTINUE        shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    RETURN          shift and go to state 25
    PRINT           shift and go to state 26
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

  ! {               [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! BREAK           [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! CONTINUE        [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! IF              [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! FOR             [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! WHILE           [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! (               [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! INTNUM          [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! FLOATNUM        [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! -               [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! RETURN          [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! PRINT           [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! ID              [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! [               [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! EYE             [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! ZEROS           [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]
  ! ONES            [ reduce using rule 17 (loop -> FOR ID = expression : expression instructions .) ]

    expression                     shift and go to state 8
    instruction                    shift and go to state 31
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 9
    assignment                     shift and go to state 10
    print                          shift and go to state 11
    assignable                     shift and go to state 19
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 126

    (40) expression -> expression - . expression
    (43) expression -> - . expression
    (33) expression -> . assignable
    (34) expression -> . ( expression )
    (35) expression -> . INTNUM
    (36) expression -> . FLOATNUM
    (37) expression -> . matrix
    (38) expression -> . matrix_function ( expression )
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . - expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTSUB expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . expression < expression
    (49) expression -> . expression > expression
    (50) expression -> . expression ELESS expression
    (51) expression -> . expression EGREATER expression
    (52) expression -> . expression EQUALS expression
    (53) expression -> . expression NEQUALS expression
    (54) expression -> . expression '
    (26) assignable -> . ID
    (27) assignable -> . ID [ expression , expression ]
    (55) matrix -> . [ nest_array_1 ]
    (60) matrix_function -> . EYE
    (61) matrix_function -> . ZEROS
    (62) matrix_function -> . ONES

    (               shift and go to state 15
    INTNUM          shift and go to state 20
    FLOATNUM        shift and go to state 21
    -               shift and go to state 24
    ID              shift and go to state 17
    [               shift and go to state 27
    EYE             shift and go to state 28
    ZEROS           shift and go to state 29
    ONES            shift and go to state 30

    expression                     shift and go to state 127
    assignable                     shift and go to state 56
    matrix                         shift and go to state 22
    matrix_function                shift and go to state 23

state 127

    (40) expression -> expression - expression .
    (43) expression -> - expression .
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTSUB expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (48) expression -> expression . < expression
    (49) expression -> expression . > expression
    (50) expression -> expression . ELESS expression
    (51) expression -> expression . EGREATER expression
    (52) expression -> expression . EQUALS expression
    (53) expression -> expression . NEQUALS expression
    (54) expression -> expression . '

  ! reduce/reduce conflict for + resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for - resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for * resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for / resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTADD resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTSUB resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTMUL resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTDIV resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for < resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for > resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for ELESS resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for EGREATER resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for EQUALS resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for NEQUALS resolved using rule 40 (expression -> expression - expression .)
  ! reduce/reduce conflict for ' resolved using rule 40 (expression -> expression - expression .)
    +               reduce using rule 40 (expression -> expression - expression .)
    -               reduce using rule 40 (expression -> expression - expression .)
    <               reduce using rule 40 (expression -> expression - expression .)
    >               reduce using rule 40 (expression -> expression - expression .)
    ELESS           reduce using rule 40 (expression -> expression - expression .)
    EGREATER        reduce using rule 40 (expression -> expression - expression .)
    EQUALS          reduce using rule 40 (expression -> expression - expression .)
    NEQUALS         reduce using rule 40 (expression -> expression - expression .)
    {               reduce using rule 40 (expression -> expression - expression .)
    BREAK           reduce using rule 40 (expression -> expression - expression .)
    CONTINUE        reduce using rule 40 (expression -> expression - expression .)
    IF              reduce using rule 40 (expression -> expression - expression .)
    FOR             reduce using rule 40 (expression -> expression - expression .)
    WHILE           reduce using rule 40 (expression -> expression - expression .)
    (               reduce using rule 40 (expression -> expression - expression .)
    INTNUM          reduce using rule 40 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 40 (expression -> expression - expression .)
    RETURN          reduce using rule 40 (expression -> expression - expression .)
    PRINT           reduce using rule 40 (expression -> expression - expression .)
    ID              reduce using rule 40 (expression -> expression - expression .)
    [               reduce using rule 40 (expression -> expression - expression .)
    EYE             reduce using rule 40 (expression -> expression - expression .)
    ZEROS           reduce using rule 40 (expression -> expression - expression .)
    ONES            reduce using rule 40 (expression -> expression - expression .)
    ;               reduce using rule 43 (expression -> - expression .)
    *               shift and go to state 36
    /               shift and go to state 37
    DOTADD          shift and go to state 38
    DOTSUB          shift and go to state 39
    DOTMUL          shift and go to state 40
    DOTDIV          shift and go to state 41
    '               shift and go to state 48

  ! *               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! +               [ reduce using rule 43 (expression -> - expression .) ]
  ! -               [ reduce using rule 43 (expression -> - expression .) ]
  ! *               [ reduce using rule 43 (expression -> - expression .) ]
  ! /               [ reduce using rule 43 (expression -> - expression .) ]
  ! DOTADD          [ reduce using rule 43 (expression -> - expression .) ]
  ! DOTSUB          [ reduce using rule 43 (expression -> - expression .) ]
  ! DOTMUL          [ reduce using rule 43 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 43 (expression -> - expression .) ]
  ! <               [ reduce using rule 43 (expression -> - expression .) ]
  ! >               [ reduce using rule 43 (expression -> - expression .) ]
  ! ELESS           [ reduce using rule 43 (expression -> - expression .) ]
  ! EGREATER        [ reduce using rule 43 (expression -> - expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> - expression .) ]
  ! NEQUALS         [ reduce using rule 43 (expression -> - expression .) ]
  ! '               [ reduce using rule 43 (expression -> - expression .) ]
  ! +               [ shift and go to state 34 ]
  ! -               [ shift and go to state 35 ]
  ! <               [ shift and go to state 42 ]
  ! >               [ shift and go to state 43 ]
  ! ELESS           [ shift and go to state 44 ]
  ! EGREATER        [ shift and go to state 45 ]
  ! EQUALS          [ shift and go to state 46 ]
  ! NEQUALS         [ shift and go to state 47 ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for [ in state 17 resolved as shift
WARNING: shift/reduce conflict for { in state 117 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 117 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for FOR in state 117 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 117 resolved as shift
WARNING: shift/reduce conflict for ( in state 117 resolved as shift
WARNING: shift/reduce conflict for INTNUM in state 117 resolved as shift
WARNING: shift/reduce conflict for FLOATNUM in state 117 resolved as shift
WARNING: shift/reduce conflict for - in state 117 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for [ in state 117 resolved as shift
WARNING: shift/reduce conflict for EYE in state 117 resolved as shift
WARNING: shift/reduce conflict for ZEROS in state 117 resolved as shift
WARNING: shift/reduce conflict for ONES in state 117 resolved as shift
WARNING: shift/reduce conflict for { in state 125 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 125 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 125 resolved as shift
WARNING: shift/reduce conflict for IF in state 125 resolved as shift
WARNING: shift/reduce conflict for FOR in state 125 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 125 resolved as shift
WARNING: shift/reduce conflict for ( in state 125 resolved as shift
WARNING: shift/reduce conflict for INTNUM in state 125 resolved as shift
WARNING: shift/reduce conflict for FLOATNUM in state 125 resolved as shift
WARNING: shift/reduce conflict for - in state 125 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 125 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 125 resolved as shift
WARNING: shift/reduce conflict for ID in state 125 resolved as shift
WARNING: shift/reduce conflict for [ in state 125 resolved as shift
WARNING: shift/reduce conflict for EYE in state 125 resolved as shift
WARNING: shift/reduce conflict for ZEROS in state 125 resolved as shift
WARNING: shift/reduce conflict for ONES in state 125 resolved as shift
WARNING: reduce/reduce conflict in state 127 resolved using rule (expression -> expression - expression)
WARNING: rejected rule (expression -> - expression) in state 127
