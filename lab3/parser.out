Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> { instructions }
Rule 7     instruction -> if
Rule 8     instruction -> loop
Rule 9     instruction -> return ;
Rule 10    instruction -> assignment ;
Rule 11    instruction -> print ;
Rule 12    instruction -> BREAK ;
Rule 13    instruction -> CONTINUE ;
Rule 14    if -> IF ( expression ) instruction
Rule 15    if -> IF ( expression ) instruction ELSE instruction
Rule 16    loop -> FOR ID = expression : expression instruction
Rule 17    loop -> WHILE ( expression ) instruction
Rule 18    return -> RETURN
Rule 19    return -> RETURN expression
Rule 20    assignment -> assignable = expression
Rule 21    assignment -> assignable ADDASSIGN expression
Rule 22    assignment -> assignable SUBASSIGN expression
Rule 23    assignment -> assignable MULASSIGN expression
Rule 24    assignment -> assignable DIVASSIGN expression
Rule 25    assignable -> ID
Rule 26    assignable -> ID [ expression , expression ]
Rule 27    print -> PRINT printable_list
Rule 28    printable_list -> printable_list , printable
Rule 29    printable_list -> printable
Rule 30    printable -> STRING
Rule 31    printable -> expression
Rule 32    expression -> assignable
Rule 33    expression -> ( expression )
Rule 34    expression -> INTNUM
Rule 35    expression -> FLOATNUM
Rule 36    expression -> matrix
Rule 37    expression -> matrix_function ( expression )
Rule 38    expression -> expression + expression
Rule 39    expression -> expression - expression
Rule 40    expression -> expression * expression
Rule 41    expression -> expression / expression
Rule 42    expression -> - expression
Rule 43    expression -> expression DOTADD expression
Rule 44    expression -> expression DOTSUB expression
Rule 45    expression -> expression DOTMUL expression
Rule 46    expression -> expression DOTDIV expression
Rule 47    expression -> expression < expression
Rule 48    expression -> expression > expression
Rule 49    expression -> expression ELESS expression
Rule 50    expression -> expression EGREATER expression
Rule 51    expression -> expression EQUALS expression
Rule 52    expression -> expression NEQUALS expression
Rule 53    expression -> expression '
Rule 54    matrix -> [ vector_1 ]
Rule 55    vector_1 -> vector_1 , [ vector_2 ]
Rule 56    vector_1 -> [ vector_2 ]
Rule 57    vector_2 -> vector_2 , expression
Rule 58    vector_2 -> expression
Rule 59    matrix_function -> EYE
Rule 60    matrix_function -> ZEROS
Rule 61    matrix_function -> ONES

Terminals, with rules where they appear

'                    : 53
(                    : 14 15 17 33 37
)                    : 14 15 17 33 37
*                    : 40
+                    : 38
,                    : 26 28 55 57
-                    : 39 42
/                    : 41
:                    : 16
;                    : 9 10 11 12 13
<                    : 47
=                    : 16 20
>                    : 48
ADDASSIGN            : 21
BREAK                : 12
CONTINUE             : 13
DIVASSIGN            : 24
DOTADD               : 43
DOTDIV               : 46
DOTMUL               : 45
DOTSUB               : 44
EGREATER             : 50
ELESS                : 49
ELSE                 : 15
EQUALS               : 51
EYE                  : 59
FLOATNUM             : 35
FOR                  : 16
ID                   : 16 25 26
IF                   : 14 15
INTNUM               : 34
MULASSIGN            : 23
NEQUALS              : 52
ONES                 : 61
PRINT                : 27
RETURN               : 18 19
STRING               : 30
SUBASSIGN            : 22
WHILE                : 17
ZEROS                : 60
[                    : 26 54 55 56
]                    : 26 54 55 56
error                : 
{                    : 6
}                    : 6

Nonterminals, with rules where they appear

assignable           : 20 21 22 23 24 32
assignment           : 10
expression           : 14 15 16 16 17 19 20 21 22 23 24 26 26 31 33 37 38 38 39 39 40 40 41 41 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 57 58
if                   : 7
instruction          : 4 5 14 15 15 16 17
instructions         : 2 4 6
instructions_opt     : 1
loop                 : 8
matrix               : 36
matrix_function      : 37
print                : 11
printable            : 28 29
printable_list       : 27 28
program              : 0
return               : 9
vector_1             : 54 55
vector_2             : 55 56 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instruction                    shift and go to state 20
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 4

    (5) instructions -> instruction .

    {               reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instructions                   shift and go to state 21
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 6

    (7) instruction -> if .

    {               reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)


state 7

    (8) instruction -> loop .

    {               reduce using rule 8 (instruction -> loop .)
    BREAK           reduce using rule 8 (instruction -> loop .)
    CONTINUE        reduce using rule 8 (instruction -> loop .)
    IF              reduce using rule 8 (instruction -> loop .)
    FOR             reduce using rule 8 (instruction -> loop .)
    WHILE           reduce using rule 8 (instruction -> loop .)
    RETURN          reduce using rule 8 (instruction -> loop .)
    PRINT           reduce using rule 8 (instruction -> loop .)
    ID              reduce using rule 8 (instruction -> loop .)
    $end            reduce using rule 8 (instruction -> loop .)
    }               reduce using rule 8 (instruction -> loop .)
    ELSE            reduce using rule 8 (instruction -> loop .)


state 8

    (9) instruction -> return . ;

    ;               shift and go to state 22


state 9

    (10) instruction -> assignment . ;

    ;               shift and go to state 23


state 10

    (11) instruction -> print . ;

    ;               shift and go to state 24


state 11

    (12) instruction -> BREAK . ;

    ;               shift and go to state 25


state 12

    (13) instruction -> CONTINUE . ;

    ;               shift and go to state 26


state 13

    (14) if -> IF . ( expression ) instruction
    (15) if -> IF . ( expression ) instruction ELSE instruction

    (               shift and go to state 27


state 14

    (16) loop -> FOR . ID = expression : expression instruction

    ID              shift and go to state 28


state 15

    (25) assignable -> ID .
    (26) assignable -> ID . [ expression , expression ]

    =               reduce using rule 25 (assignable -> ID .)
    ADDASSIGN       reduce using rule 25 (assignable -> ID .)
    SUBASSIGN       reduce using rule 25 (assignable -> ID .)
    MULASSIGN       reduce using rule 25 (assignable -> ID .)
    DIVASSIGN       reduce using rule 25 (assignable -> ID .)
    +               reduce using rule 25 (assignable -> ID .)
    -               reduce using rule 25 (assignable -> ID .)
    *               reduce using rule 25 (assignable -> ID .)
    /               reduce using rule 25 (assignable -> ID .)
    DOTADD          reduce using rule 25 (assignable -> ID .)
    DOTSUB          reduce using rule 25 (assignable -> ID .)
    DOTMUL          reduce using rule 25 (assignable -> ID .)
    DOTDIV          reduce using rule 25 (assignable -> ID .)
    <               reduce using rule 25 (assignable -> ID .)
    >               reduce using rule 25 (assignable -> ID .)
    ELESS           reduce using rule 25 (assignable -> ID .)
    EGREATER        reduce using rule 25 (assignable -> ID .)
    EQUALS          reduce using rule 25 (assignable -> ID .)
    NEQUALS         reduce using rule 25 (assignable -> ID .)
    '               reduce using rule 25 (assignable -> ID .)
    ;               reduce using rule 25 (assignable -> ID .)
    ,               reduce using rule 25 (assignable -> ID .)
    )               reduce using rule 25 (assignable -> ID .)
    :               reduce using rule 25 (assignable -> ID .)
    ]               reduce using rule 25 (assignable -> ID .)
    {               reduce using rule 25 (assignable -> ID .)
    BREAK           reduce using rule 25 (assignable -> ID .)
    CONTINUE        reduce using rule 25 (assignable -> ID .)
    IF              reduce using rule 25 (assignable -> ID .)
    FOR             reduce using rule 25 (assignable -> ID .)
    WHILE           reduce using rule 25 (assignable -> ID .)
    RETURN          reduce using rule 25 (assignable -> ID .)
    PRINT           reduce using rule 25 (assignable -> ID .)
    ID              reduce using rule 25 (assignable -> ID .)
    [               shift and go to state 29


state 16

    (17) loop -> WHILE . ( expression ) instruction

    (               shift and go to state 30


state 17

    (18) return -> RETURN .
    (19) return -> RETURN . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    ;               reduce using rule 18 (return -> RETURN .)
    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 31
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 18

    (20) assignment -> assignable . = expression
    (21) assignment -> assignable . ADDASSIGN expression
    (22) assignment -> assignable . SUBASSIGN expression
    (23) assignment -> assignable . MULASSIGN expression
    (24) assignment -> assignable . DIVASSIGN expression

    =               shift and go to state 43
    ADDASSIGN       shift and go to state 44
    SUBASSIGN       shift and go to state 45
    MULASSIGN       shift and go to state 46
    DIVASSIGN       shift and go to state 47


state 19

    (27) print -> PRINT . printable_list
    (28) printable_list -> . printable_list , printable
    (29) printable_list -> . printable
    (30) printable -> . STRING
    (31) printable -> . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    STRING          shift and go to state 50
    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    printable_list                 shift and go to state 48
    printable                      shift and go to state 49
    expression                     shift and go to state 51
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 20

    (4) instructions -> instructions instruction .

    {               reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 21

    (6) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    }               shift and go to state 52
    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instruction                    shift and go to state 20
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 22

    (9) instruction -> return ; .

    {               reduce using rule 9 (instruction -> return ; .)
    BREAK           reduce using rule 9 (instruction -> return ; .)
    CONTINUE        reduce using rule 9 (instruction -> return ; .)
    IF              reduce using rule 9 (instruction -> return ; .)
    FOR             reduce using rule 9 (instruction -> return ; .)
    WHILE           reduce using rule 9 (instruction -> return ; .)
    RETURN          reduce using rule 9 (instruction -> return ; .)
    PRINT           reduce using rule 9 (instruction -> return ; .)
    ID              reduce using rule 9 (instruction -> return ; .)
    $end            reduce using rule 9 (instruction -> return ; .)
    }               reduce using rule 9 (instruction -> return ; .)
    ELSE            reduce using rule 9 (instruction -> return ; .)


state 23

    (10) instruction -> assignment ; .

    {               reduce using rule 10 (instruction -> assignment ; .)
    BREAK           reduce using rule 10 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 10 (instruction -> assignment ; .)
    IF              reduce using rule 10 (instruction -> assignment ; .)
    FOR             reduce using rule 10 (instruction -> assignment ; .)
    WHILE           reduce using rule 10 (instruction -> assignment ; .)
    RETURN          reduce using rule 10 (instruction -> assignment ; .)
    PRINT           reduce using rule 10 (instruction -> assignment ; .)
    ID              reduce using rule 10 (instruction -> assignment ; .)
    $end            reduce using rule 10 (instruction -> assignment ; .)
    }               reduce using rule 10 (instruction -> assignment ; .)
    ELSE            reduce using rule 10 (instruction -> assignment ; .)


state 24

    (11) instruction -> print ; .

    {               reduce using rule 11 (instruction -> print ; .)
    BREAK           reduce using rule 11 (instruction -> print ; .)
    CONTINUE        reduce using rule 11 (instruction -> print ; .)
    IF              reduce using rule 11 (instruction -> print ; .)
    FOR             reduce using rule 11 (instruction -> print ; .)
    WHILE           reduce using rule 11 (instruction -> print ; .)
    RETURN          reduce using rule 11 (instruction -> print ; .)
    PRINT           reduce using rule 11 (instruction -> print ; .)
    ID              reduce using rule 11 (instruction -> print ; .)
    $end            reduce using rule 11 (instruction -> print ; .)
    }               reduce using rule 11 (instruction -> print ; .)
    ELSE            reduce using rule 11 (instruction -> print ; .)


state 25

    (12) instruction -> BREAK ; .

    {               reduce using rule 12 (instruction -> BREAK ; .)
    BREAK           reduce using rule 12 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 12 (instruction -> BREAK ; .)
    IF              reduce using rule 12 (instruction -> BREAK ; .)
    FOR             reduce using rule 12 (instruction -> BREAK ; .)
    WHILE           reduce using rule 12 (instruction -> BREAK ; .)
    RETURN          reduce using rule 12 (instruction -> BREAK ; .)
    PRINT           reduce using rule 12 (instruction -> BREAK ; .)
    ID              reduce using rule 12 (instruction -> BREAK ; .)
    $end            reduce using rule 12 (instruction -> BREAK ; .)
    }               reduce using rule 12 (instruction -> BREAK ; .)
    ELSE            reduce using rule 12 (instruction -> BREAK ; .)


state 26

    (13) instruction -> CONTINUE ; .

    {               reduce using rule 13 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 13 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 13 (instruction -> CONTINUE ; .)
    IF              reduce using rule 13 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 13 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 13 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 13 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 13 (instruction -> CONTINUE ; .)
    ID              reduce using rule 13 (instruction -> CONTINUE ; .)
    $end            reduce using rule 13 (instruction -> CONTINUE ; .)
    }               reduce using rule 13 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 13 (instruction -> CONTINUE ; .)


state 27

    (14) if -> IF ( . expression ) instruction
    (15) if -> IF ( . expression ) instruction ELSE instruction
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 53
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 28

    (16) loop -> FOR ID . = expression : expression instruction

    =               shift and go to state 54


state 29

    (26) assignable -> ID [ . expression , expression ]
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 55
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 30

    (17) loop -> WHILE ( . expression ) instruction
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 56
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 31

    (19) return -> RETURN expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ;               reduce using rule 19 (return -> RETURN expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 32

    (32) expression -> assignable .

    +               reduce using rule 32 (expression -> assignable .)
    -               reduce using rule 32 (expression -> assignable .)
    *               reduce using rule 32 (expression -> assignable .)
    /               reduce using rule 32 (expression -> assignable .)
    DOTADD          reduce using rule 32 (expression -> assignable .)
    DOTSUB          reduce using rule 32 (expression -> assignable .)
    DOTMUL          reduce using rule 32 (expression -> assignable .)
    DOTDIV          reduce using rule 32 (expression -> assignable .)
    <               reduce using rule 32 (expression -> assignable .)
    >               reduce using rule 32 (expression -> assignable .)
    ELESS           reduce using rule 32 (expression -> assignable .)
    EGREATER        reduce using rule 32 (expression -> assignable .)
    EQUALS          reduce using rule 32 (expression -> assignable .)
    NEQUALS         reduce using rule 32 (expression -> assignable .)
    '               reduce using rule 32 (expression -> assignable .)
    ;               reduce using rule 32 (expression -> assignable .)
    ,               reduce using rule 32 (expression -> assignable .)
    )               reduce using rule 32 (expression -> assignable .)
    :               reduce using rule 32 (expression -> assignable .)
    ]               reduce using rule 32 (expression -> assignable .)
    {               reduce using rule 32 (expression -> assignable .)
    BREAK           reduce using rule 32 (expression -> assignable .)
    CONTINUE        reduce using rule 32 (expression -> assignable .)
    IF              reduce using rule 32 (expression -> assignable .)
    FOR             reduce using rule 32 (expression -> assignable .)
    WHILE           reduce using rule 32 (expression -> assignable .)
    RETURN          reduce using rule 32 (expression -> assignable .)
    PRINT           reduce using rule 32 (expression -> assignable .)
    ID              reduce using rule 32 (expression -> assignable .)


state 33

    (33) expression -> ( . expression )
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 72
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 34

    (34) expression -> INTNUM .

    +               reduce using rule 34 (expression -> INTNUM .)
    -               reduce using rule 34 (expression -> INTNUM .)
    *               reduce using rule 34 (expression -> INTNUM .)
    /               reduce using rule 34 (expression -> INTNUM .)
    DOTADD          reduce using rule 34 (expression -> INTNUM .)
    DOTSUB          reduce using rule 34 (expression -> INTNUM .)
    DOTMUL          reduce using rule 34 (expression -> INTNUM .)
    DOTDIV          reduce using rule 34 (expression -> INTNUM .)
    <               reduce using rule 34 (expression -> INTNUM .)
    >               reduce using rule 34 (expression -> INTNUM .)
    ELESS           reduce using rule 34 (expression -> INTNUM .)
    EGREATER        reduce using rule 34 (expression -> INTNUM .)
    EQUALS          reduce using rule 34 (expression -> INTNUM .)
    NEQUALS         reduce using rule 34 (expression -> INTNUM .)
    '               reduce using rule 34 (expression -> INTNUM .)
    ;               reduce using rule 34 (expression -> INTNUM .)
    ,               reduce using rule 34 (expression -> INTNUM .)
    )               reduce using rule 34 (expression -> INTNUM .)
    :               reduce using rule 34 (expression -> INTNUM .)
    ]               reduce using rule 34 (expression -> INTNUM .)
    {               reduce using rule 34 (expression -> INTNUM .)
    BREAK           reduce using rule 34 (expression -> INTNUM .)
    CONTINUE        reduce using rule 34 (expression -> INTNUM .)
    IF              reduce using rule 34 (expression -> INTNUM .)
    FOR             reduce using rule 34 (expression -> INTNUM .)
    WHILE           reduce using rule 34 (expression -> INTNUM .)
    RETURN          reduce using rule 34 (expression -> INTNUM .)
    PRINT           reduce using rule 34 (expression -> INTNUM .)
    ID              reduce using rule 34 (expression -> INTNUM .)


state 35

    (35) expression -> FLOATNUM .

    +               reduce using rule 35 (expression -> FLOATNUM .)
    -               reduce using rule 35 (expression -> FLOATNUM .)
    *               reduce using rule 35 (expression -> FLOATNUM .)
    /               reduce using rule 35 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 35 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 35 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 35 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 35 (expression -> FLOATNUM .)
    <               reduce using rule 35 (expression -> FLOATNUM .)
    >               reduce using rule 35 (expression -> FLOATNUM .)
    ELESS           reduce using rule 35 (expression -> FLOATNUM .)
    EGREATER        reduce using rule 35 (expression -> FLOATNUM .)
    EQUALS          reduce using rule 35 (expression -> FLOATNUM .)
    NEQUALS         reduce using rule 35 (expression -> FLOATNUM .)
    '               reduce using rule 35 (expression -> FLOATNUM .)
    ;               reduce using rule 35 (expression -> FLOATNUM .)
    ,               reduce using rule 35 (expression -> FLOATNUM .)
    )               reduce using rule 35 (expression -> FLOATNUM .)
    :               reduce using rule 35 (expression -> FLOATNUM .)
    ]               reduce using rule 35 (expression -> FLOATNUM .)
    {               reduce using rule 35 (expression -> FLOATNUM .)
    BREAK           reduce using rule 35 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 35 (expression -> FLOATNUM .)
    IF              reduce using rule 35 (expression -> FLOATNUM .)
    FOR             reduce using rule 35 (expression -> FLOATNUM .)
    WHILE           reduce using rule 35 (expression -> FLOATNUM .)
    RETURN          reduce using rule 35 (expression -> FLOATNUM .)
    PRINT           reduce using rule 35 (expression -> FLOATNUM .)
    ID              reduce using rule 35 (expression -> FLOATNUM .)


state 36

    (36) expression -> matrix .

    +               reduce using rule 36 (expression -> matrix .)
    -               reduce using rule 36 (expression -> matrix .)
    *               reduce using rule 36 (expression -> matrix .)
    /               reduce using rule 36 (expression -> matrix .)
    DOTADD          reduce using rule 36 (expression -> matrix .)
    DOTSUB          reduce using rule 36 (expression -> matrix .)
    DOTMUL          reduce using rule 36 (expression -> matrix .)
    DOTDIV          reduce using rule 36 (expression -> matrix .)
    <               reduce using rule 36 (expression -> matrix .)
    >               reduce using rule 36 (expression -> matrix .)
    ELESS           reduce using rule 36 (expression -> matrix .)
    EGREATER        reduce using rule 36 (expression -> matrix .)
    EQUALS          reduce using rule 36 (expression -> matrix .)
    NEQUALS         reduce using rule 36 (expression -> matrix .)
    '               reduce using rule 36 (expression -> matrix .)
    ;               reduce using rule 36 (expression -> matrix .)
    ,               reduce using rule 36 (expression -> matrix .)
    )               reduce using rule 36 (expression -> matrix .)
    :               reduce using rule 36 (expression -> matrix .)
    ]               reduce using rule 36 (expression -> matrix .)
    {               reduce using rule 36 (expression -> matrix .)
    BREAK           reduce using rule 36 (expression -> matrix .)
    CONTINUE        reduce using rule 36 (expression -> matrix .)
    IF              reduce using rule 36 (expression -> matrix .)
    FOR             reduce using rule 36 (expression -> matrix .)
    WHILE           reduce using rule 36 (expression -> matrix .)
    RETURN          reduce using rule 36 (expression -> matrix .)
    PRINT           reduce using rule 36 (expression -> matrix .)
    ID              reduce using rule 36 (expression -> matrix .)


state 37

    (37) expression -> matrix_function . ( expression )

    (               shift and go to state 73


state 38

    (42) expression -> - . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 74
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 39

    (54) matrix -> [ . vector_1 ]
    (55) vector_1 -> . vector_1 , [ vector_2 ]
    (56) vector_1 -> . [ vector_2 ]

    [               shift and go to state 75

    vector_1                       shift and go to state 76

state 40

    (59) matrix_function -> EYE .

    (               reduce using rule 59 (matrix_function -> EYE .)


state 41

    (60) matrix_function -> ZEROS .

    (               reduce using rule 60 (matrix_function -> ZEROS .)


state 42

    (61) matrix_function -> ONES .

    (               reduce using rule 61 (matrix_function -> ONES .)


state 43

    (20) assignment -> assignable = . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    assignable                     shift and go to state 32
    expression                     shift and go to state 77
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 44

    (21) assignment -> assignable ADDASSIGN . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    assignable                     shift and go to state 32
    expression                     shift and go to state 78
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 45

    (22) assignment -> assignable SUBASSIGN . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    assignable                     shift and go to state 32
    expression                     shift and go to state 79
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 46

    (23) assignment -> assignable MULASSIGN . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    assignable                     shift and go to state 32
    expression                     shift and go to state 80
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 47

    (24) assignment -> assignable DIVASSIGN . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    assignable                     shift and go to state 32
    expression                     shift and go to state 81
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 48

    (27) print -> PRINT printable_list .
    (28) printable_list -> printable_list . , printable

    ;               reduce using rule 27 (print -> PRINT printable_list .)
    ,               shift and go to state 82


state 49

    (29) printable_list -> printable .

    ,               reduce using rule 29 (printable_list -> printable .)
    ;               reduce using rule 29 (printable_list -> printable .)


state 50

    (30) printable -> STRING .

    ,               reduce using rule 30 (printable -> STRING .)
    ;               reduce using rule 30 (printable -> STRING .)


state 51

    (31) printable -> expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ,               reduce using rule 31 (printable -> expression .)
    ;               reduce using rule 31 (printable -> expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 52

    (6) instruction -> { instructions } .

    {               reduce using rule 6 (instruction -> { instructions } .)
    BREAK           reduce using rule 6 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 6 (instruction -> { instructions } .)
    IF              reduce using rule 6 (instruction -> { instructions } .)
    FOR             reduce using rule 6 (instruction -> { instructions } .)
    WHILE           reduce using rule 6 (instruction -> { instructions } .)
    RETURN          reduce using rule 6 (instruction -> { instructions } .)
    PRINT           reduce using rule 6 (instruction -> { instructions } .)
    ID              reduce using rule 6 (instruction -> { instructions } .)
    $end            reduce using rule 6 (instruction -> { instructions } .)
    }               reduce using rule 6 (instruction -> { instructions } .)
    ELSE            reduce using rule 6 (instruction -> { instructions } .)


state 53

    (14) if -> IF ( expression . ) instruction
    (15) if -> IF ( expression . ) instruction ELSE instruction
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    )               shift and go to state 83
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 54

    (16) loop -> FOR ID = . expression : expression instruction
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 84
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 55

    (26) assignable -> ID [ expression . , expression ]
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ,               shift and go to state 85
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 56

    (17) loop -> WHILE ( expression . ) instruction
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    )               shift and go to state 86
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 57

    (38) expression -> expression + . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 87
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 58

    (39) expression -> expression - . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 88
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 59

    (40) expression -> expression * . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 89
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 60

    (41) expression -> expression / . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 90
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 61

    (43) expression -> expression DOTADD . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 91
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 62

    (44) expression -> expression DOTSUB . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 92
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 63

    (45) expression -> expression DOTMUL . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 93
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 64

    (46) expression -> expression DOTDIV . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 94
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 65

    (47) expression -> expression < . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 95
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 66

    (48) expression -> expression > . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 96
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 67

    (49) expression -> expression ELESS . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 97
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 68

    (50) expression -> expression EGREATER . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 98
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 69

    (51) expression -> expression EQUALS . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 99
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 70

    (52) expression -> expression NEQUALS . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 100
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 71

    (53) expression -> expression ' .

    +               reduce using rule 53 (expression -> expression ' .)
    -               reduce using rule 53 (expression -> expression ' .)
    *               reduce using rule 53 (expression -> expression ' .)
    /               reduce using rule 53 (expression -> expression ' .)
    DOTADD          reduce using rule 53 (expression -> expression ' .)
    DOTSUB          reduce using rule 53 (expression -> expression ' .)
    DOTMUL          reduce using rule 53 (expression -> expression ' .)
    DOTDIV          reduce using rule 53 (expression -> expression ' .)
    <               reduce using rule 53 (expression -> expression ' .)
    >               reduce using rule 53 (expression -> expression ' .)
    ELESS           reduce using rule 53 (expression -> expression ' .)
    EGREATER        reduce using rule 53 (expression -> expression ' .)
    EQUALS          reduce using rule 53 (expression -> expression ' .)
    NEQUALS         reduce using rule 53 (expression -> expression ' .)
    '               reduce using rule 53 (expression -> expression ' .)
    ;               reduce using rule 53 (expression -> expression ' .)
    ,               reduce using rule 53 (expression -> expression ' .)
    )               reduce using rule 53 (expression -> expression ' .)
    :               reduce using rule 53 (expression -> expression ' .)
    ]               reduce using rule 53 (expression -> expression ' .)
    {               reduce using rule 53 (expression -> expression ' .)
    BREAK           reduce using rule 53 (expression -> expression ' .)
    CONTINUE        reduce using rule 53 (expression -> expression ' .)
    IF              reduce using rule 53 (expression -> expression ' .)
    FOR             reduce using rule 53 (expression -> expression ' .)
    WHILE           reduce using rule 53 (expression -> expression ' .)
    RETURN          reduce using rule 53 (expression -> expression ' .)
    PRINT           reduce using rule 53 (expression -> expression ' .)
    ID              reduce using rule 53 (expression -> expression ' .)


state 72

    (33) expression -> ( expression . )
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    )               shift and go to state 101
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 73

    (37) expression -> matrix_function ( . expression )
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    matrix_function                shift and go to state 37
    expression                     shift and go to state 102
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36

state 74

    (42) expression -> - expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 42 (expression -> - expression .)
    -               reduce using rule 42 (expression -> - expression .)
    *               reduce using rule 42 (expression -> - expression .)
    /               reduce using rule 42 (expression -> - expression .)
    DOTADD          reduce using rule 42 (expression -> - expression .)
    DOTSUB          reduce using rule 42 (expression -> - expression .)
    DOTMUL          reduce using rule 42 (expression -> - expression .)
    DOTDIV          reduce using rule 42 (expression -> - expression .)
    <               reduce using rule 42 (expression -> - expression .)
    >               reduce using rule 42 (expression -> - expression .)
    ELESS           reduce using rule 42 (expression -> - expression .)
    EGREATER        reduce using rule 42 (expression -> - expression .)
    EQUALS          reduce using rule 42 (expression -> - expression .)
    NEQUALS         reduce using rule 42 (expression -> - expression .)
    '               reduce using rule 42 (expression -> - expression .)
    ;               reduce using rule 42 (expression -> - expression .)
    ,               reduce using rule 42 (expression -> - expression .)
    )               reduce using rule 42 (expression -> - expression .)
    :               reduce using rule 42 (expression -> - expression .)
    ]               reduce using rule 42 (expression -> - expression .)
    {               reduce using rule 42 (expression -> - expression .)
    BREAK           reduce using rule 42 (expression -> - expression .)
    CONTINUE        reduce using rule 42 (expression -> - expression .)
    IF              reduce using rule 42 (expression -> - expression .)
    FOR             reduce using rule 42 (expression -> - expression .)
    WHILE           reduce using rule 42 (expression -> - expression .)
    RETURN          reduce using rule 42 (expression -> - expression .)
    PRINT           reduce using rule 42 (expression -> - expression .)
    ID              reduce using rule 42 (expression -> - expression .)

  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]
  ! '               [ shift and go to state 71 ]


state 75

    (56) vector_1 -> [ . vector_2 ]
    (57) vector_2 -> . vector_2 , expression
    (58) vector_2 -> . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    vector_2                       shift and go to state 103
    expression                     shift and go to state 104
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 76

    (54) matrix -> [ vector_1 . ]
    (55) vector_1 -> vector_1 . , [ vector_2 ]

    ]               shift and go to state 105
    ,               shift and go to state 106


state 77

    (20) assignment -> assignable = expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ;               reduce using rule 20 (assignment -> assignable = expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 78

    (21) assignment -> assignable ADDASSIGN expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ;               reduce using rule 21 (assignment -> assignable ADDASSIGN expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 79

    (22) assignment -> assignable SUBASSIGN expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ;               reduce using rule 22 (assignment -> assignable SUBASSIGN expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 80

    (23) assignment -> assignable MULASSIGN expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ;               reduce using rule 23 (assignment -> assignable MULASSIGN expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 81

    (24) assignment -> assignable DIVASSIGN expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ;               reduce using rule 24 (assignment -> assignable DIVASSIGN expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 82

    (28) printable_list -> printable_list , . printable
    (30) printable -> . STRING
    (31) printable -> . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    STRING          shift and go to state 50
    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    printable                      shift and go to state 107
    expression                     shift and go to state 51
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 83

    (14) if -> IF ( expression ) . instruction
    (15) if -> IF ( expression ) . instruction ELSE instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instruction                    shift and go to state 108
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 84

    (16) loop -> FOR ID = expression . : expression instruction
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    :               shift and go to state 109
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 85

    (26) assignable -> ID [ expression , . expression ]
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 110
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 86

    (17) loop -> WHILE ( expression ) . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instruction                    shift and go to state 111
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 87

    (38) expression -> expression + expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 38 (expression -> expression + expression .)
    -               reduce using rule 38 (expression -> expression + expression .)
    <               reduce using rule 38 (expression -> expression + expression .)
    >               reduce using rule 38 (expression -> expression + expression .)
    ELESS           reduce using rule 38 (expression -> expression + expression .)
    EGREATER        reduce using rule 38 (expression -> expression + expression .)
    EQUALS          reduce using rule 38 (expression -> expression + expression .)
    NEQUALS         reduce using rule 38 (expression -> expression + expression .)
    ;               reduce using rule 38 (expression -> expression + expression .)
    ,               reduce using rule 38 (expression -> expression + expression .)
    )               reduce using rule 38 (expression -> expression + expression .)
    :               reduce using rule 38 (expression -> expression + expression .)
    ]               reduce using rule 38 (expression -> expression + expression .)
    {               reduce using rule 38 (expression -> expression + expression .)
    BREAK           reduce using rule 38 (expression -> expression + expression .)
    CONTINUE        reduce using rule 38 (expression -> expression + expression .)
    IF              reduce using rule 38 (expression -> expression + expression .)
    FOR             reduce using rule 38 (expression -> expression + expression .)
    WHILE           reduce using rule 38 (expression -> expression + expression .)
    RETURN          reduce using rule 38 (expression -> expression + expression .)
    PRINT           reduce using rule 38 (expression -> expression + expression .)
    ID              reduce using rule 38 (expression -> expression + expression .)
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! *               [ reduce using rule 38 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 38 (expression -> expression + expression .) ]
  ! DOTADD          [ reduce using rule 38 (expression -> expression + expression .) ]
  ! DOTSUB          [ reduce using rule 38 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 38 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 38 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 38 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 88

    (39) expression -> expression - expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 39 (expression -> expression - expression .)
    -               reduce using rule 39 (expression -> expression - expression .)
    <               reduce using rule 39 (expression -> expression - expression .)
    >               reduce using rule 39 (expression -> expression - expression .)
    ELESS           reduce using rule 39 (expression -> expression - expression .)
    EGREATER        reduce using rule 39 (expression -> expression - expression .)
    EQUALS          reduce using rule 39 (expression -> expression - expression .)
    NEQUALS         reduce using rule 39 (expression -> expression - expression .)
    ;               reduce using rule 39 (expression -> expression - expression .)
    ,               reduce using rule 39 (expression -> expression - expression .)
    )               reduce using rule 39 (expression -> expression - expression .)
    :               reduce using rule 39 (expression -> expression - expression .)
    ]               reduce using rule 39 (expression -> expression - expression .)
    {               reduce using rule 39 (expression -> expression - expression .)
    BREAK           reduce using rule 39 (expression -> expression - expression .)
    CONTINUE        reduce using rule 39 (expression -> expression - expression .)
    IF              reduce using rule 39 (expression -> expression - expression .)
    FOR             reduce using rule 39 (expression -> expression - expression .)
    WHILE           reduce using rule 39 (expression -> expression - expression .)
    RETURN          reduce using rule 39 (expression -> expression - expression .)
    PRINT           reduce using rule 39 (expression -> expression - expression .)
    ID              reduce using rule 39 (expression -> expression - expression .)
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! *               [ reduce using rule 39 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 39 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 39 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 39 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 39 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 39 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 89

    (40) expression -> expression * expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 40 (expression -> expression * expression .)
    -               reduce using rule 40 (expression -> expression * expression .)
    *               reduce using rule 40 (expression -> expression * expression .)
    /               reduce using rule 40 (expression -> expression * expression .)
    <               reduce using rule 40 (expression -> expression * expression .)
    >               reduce using rule 40 (expression -> expression * expression .)
    ELESS           reduce using rule 40 (expression -> expression * expression .)
    EGREATER        reduce using rule 40 (expression -> expression * expression .)
    EQUALS          reduce using rule 40 (expression -> expression * expression .)
    NEQUALS         reduce using rule 40 (expression -> expression * expression .)
    ;               reduce using rule 40 (expression -> expression * expression .)
    ,               reduce using rule 40 (expression -> expression * expression .)
    )               reduce using rule 40 (expression -> expression * expression .)
    :               reduce using rule 40 (expression -> expression * expression .)
    ]               reduce using rule 40 (expression -> expression * expression .)
    {               reduce using rule 40 (expression -> expression * expression .)
    BREAK           reduce using rule 40 (expression -> expression * expression .)
    CONTINUE        reduce using rule 40 (expression -> expression * expression .)
    IF              reduce using rule 40 (expression -> expression * expression .)
    FOR             reduce using rule 40 (expression -> expression * expression .)
    WHILE           reduce using rule 40 (expression -> expression * expression .)
    RETURN          reduce using rule 40 (expression -> expression * expression .)
    PRINT           reduce using rule 40 (expression -> expression * expression .)
    ID              reduce using rule 40 (expression -> expression * expression .)
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! DOTADD          [ reduce using rule 40 (expression -> expression * expression .) ]
  ! DOTSUB          [ reduce using rule 40 (expression -> expression * expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> expression * expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression * expression .) ]
  ! '               [ reduce using rule 40 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 90

    (41) expression -> expression / expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 41 (expression -> expression / expression .)
    -               reduce using rule 41 (expression -> expression / expression .)
    *               reduce using rule 41 (expression -> expression / expression .)
    /               reduce using rule 41 (expression -> expression / expression .)
    <               reduce using rule 41 (expression -> expression / expression .)
    >               reduce using rule 41 (expression -> expression / expression .)
    ELESS           reduce using rule 41 (expression -> expression / expression .)
    EGREATER        reduce using rule 41 (expression -> expression / expression .)
    EQUALS          reduce using rule 41 (expression -> expression / expression .)
    NEQUALS         reduce using rule 41 (expression -> expression / expression .)
    ;               reduce using rule 41 (expression -> expression / expression .)
    ,               reduce using rule 41 (expression -> expression / expression .)
    )               reduce using rule 41 (expression -> expression / expression .)
    :               reduce using rule 41 (expression -> expression / expression .)
    ]               reduce using rule 41 (expression -> expression / expression .)
    {               reduce using rule 41 (expression -> expression / expression .)
    BREAK           reduce using rule 41 (expression -> expression / expression .)
    CONTINUE        reduce using rule 41 (expression -> expression / expression .)
    IF              reduce using rule 41 (expression -> expression / expression .)
    FOR             reduce using rule 41 (expression -> expression / expression .)
    WHILE           reduce using rule 41 (expression -> expression / expression .)
    RETURN          reduce using rule 41 (expression -> expression / expression .)
    PRINT           reduce using rule 41 (expression -> expression / expression .)
    ID              reduce using rule 41 (expression -> expression / expression .)
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! DOTADD          [ reduce using rule 41 (expression -> expression / expression .) ]
  ! DOTSUB          [ reduce using rule 41 (expression -> expression / expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> expression / expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> expression / expression .) ]
  ! '               [ reduce using rule 41 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 91

    (43) expression -> expression DOTADD expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 43 (expression -> expression DOTADD expression .)
    -               reduce using rule 43 (expression -> expression DOTADD expression .)
    *               reduce using rule 43 (expression -> expression DOTADD expression .)
    /               reduce using rule 43 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 43 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 43 (expression -> expression DOTADD expression .)
    <               reduce using rule 43 (expression -> expression DOTADD expression .)
    >               reduce using rule 43 (expression -> expression DOTADD expression .)
    ELESS           reduce using rule 43 (expression -> expression DOTADD expression .)
    EGREATER        reduce using rule 43 (expression -> expression DOTADD expression .)
    EQUALS          reduce using rule 43 (expression -> expression DOTADD expression .)
    NEQUALS         reduce using rule 43 (expression -> expression DOTADD expression .)
    ;               reduce using rule 43 (expression -> expression DOTADD expression .)
    ,               reduce using rule 43 (expression -> expression DOTADD expression .)
    )               reduce using rule 43 (expression -> expression DOTADD expression .)
    :               reduce using rule 43 (expression -> expression DOTADD expression .)
    ]               reduce using rule 43 (expression -> expression DOTADD expression .)
    {               reduce using rule 43 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 43 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 43 (expression -> expression DOTADD expression .)
    IF              reduce using rule 43 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 43 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 43 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 43 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 43 (expression -> expression DOTADD expression .)
    ID              reduce using rule 43 (expression -> expression DOTADD expression .)
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! DOTMUL          [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 92

    (44) expression -> expression DOTSUB expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 44 (expression -> expression DOTSUB expression .)
    -               reduce using rule 44 (expression -> expression DOTSUB expression .)
    *               reduce using rule 44 (expression -> expression DOTSUB expression .)
    /               reduce using rule 44 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 44 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 44 (expression -> expression DOTSUB expression .)
    <               reduce using rule 44 (expression -> expression DOTSUB expression .)
    >               reduce using rule 44 (expression -> expression DOTSUB expression .)
    ELESS           reduce using rule 44 (expression -> expression DOTSUB expression .)
    EGREATER        reduce using rule 44 (expression -> expression DOTSUB expression .)
    EQUALS          reduce using rule 44 (expression -> expression DOTSUB expression .)
    NEQUALS         reduce using rule 44 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 44 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 44 (expression -> expression DOTSUB expression .)
    )               reduce using rule 44 (expression -> expression DOTSUB expression .)
    :               reduce using rule 44 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 44 (expression -> expression DOTSUB expression .)
    {               reduce using rule 44 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 44 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 44 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 44 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 44 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 44 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 44 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 44 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 44 (expression -> expression DOTSUB expression .)
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! DOTMUL          [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 93

    (45) expression -> expression DOTMUL expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 45 (expression -> expression DOTMUL expression .)
    -               reduce using rule 45 (expression -> expression DOTMUL expression .)
    *               reduce using rule 45 (expression -> expression DOTMUL expression .)
    /               reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 45 (expression -> expression DOTMUL expression .)
    <               reduce using rule 45 (expression -> expression DOTMUL expression .)
    >               reduce using rule 45 (expression -> expression DOTMUL expression .)
    ELESS           reduce using rule 45 (expression -> expression DOTMUL expression .)
    EGREATER        reduce using rule 45 (expression -> expression DOTMUL expression .)
    EQUALS          reduce using rule 45 (expression -> expression DOTMUL expression .)
    NEQUALS         reduce using rule 45 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 45 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 45 (expression -> expression DOTMUL expression .)
    )               reduce using rule 45 (expression -> expression DOTMUL expression .)
    :               reduce using rule 45 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 45 (expression -> expression DOTMUL expression .)
    {               reduce using rule 45 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 45 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 45 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 45 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 45 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 45 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 45 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 45 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 45 (expression -> expression DOTMUL expression .)
    '               shift and go to state 71

  ! '               [ reduce using rule 45 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 94

    (46) expression -> expression DOTDIV expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    +               reduce using rule 46 (expression -> expression DOTDIV expression .)
    -               reduce using rule 46 (expression -> expression DOTDIV expression .)
    *               reduce using rule 46 (expression -> expression DOTDIV expression .)
    /               reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 46 (expression -> expression DOTDIV expression .)
    <               reduce using rule 46 (expression -> expression DOTDIV expression .)
    >               reduce using rule 46 (expression -> expression DOTDIV expression .)
    ELESS           reduce using rule 46 (expression -> expression DOTDIV expression .)
    EGREATER        reduce using rule 46 (expression -> expression DOTDIV expression .)
    EQUALS          reduce using rule 46 (expression -> expression DOTDIV expression .)
    NEQUALS         reduce using rule 46 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 46 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 46 (expression -> expression DOTDIV expression .)
    )               reduce using rule 46 (expression -> expression DOTDIV expression .)
    :               reduce using rule 46 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 46 (expression -> expression DOTDIV expression .)
    {               reduce using rule 46 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 46 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 46 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 46 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 46 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 46 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 46 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 46 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 46 (expression -> expression DOTDIV expression .)
    '               shift and go to state 71

  ! '               [ reduce using rule 46 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 58 ]
  ! *               [ shift and go to state 59 ]
  ! /               [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 95

    (47) expression -> expression < expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    <               reduce using rule 47 (expression -> expression < expression .)
    >               reduce using rule 47 (expression -> expression < expression .)
    ELESS           reduce using rule 47 (expression -> expression < expression .)
    EGREATER        reduce using rule 47 (expression -> expression < expression .)
    EQUALS          reduce using rule 47 (expression -> expression < expression .)
    NEQUALS         reduce using rule 47 (expression -> expression < expression .)
    ;               reduce using rule 47 (expression -> expression < expression .)
    ,               reduce using rule 47 (expression -> expression < expression .)
    )               reduce using rule 47 (expression -> expression < expression .)
    :               reduce using rule 47 (expression -> expression < expression .)
    ]               reduce using rule 47 (expression -> expression < expression .)
    {               reduce using rule 47 (expression -> expression < expression .)
    BREAK           reduce using rule 47 (expression -> expression < expression .)
    CONTINUE        reduce using rule 47 (expression -> expression < expression .)
    IF              reduce using rule 47 (expression -> expression < expression .)
    FOR             reduce using rule 47 (expression -> expression < expression .)
    WHILE           reduce using rule 47 (expression -> expression < expression .)
    RETURN          reduce using rule 47 (expression -> expression < expression .)
    PRINT           reduce using rule 47 (expression -> expression < expression .)
    ID              reduce using rule 47 (expression -> expression < expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! +               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! '               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 96

    (48) expression -> expression > expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    <               reduce using rule 48 (expression -> expression > expression .)
    >               reduce using rule 48 (expression -> expression > expression .)
    ELESS           reduce using rule 48 (expression -> expression > expression .)
    EGREATER        reduce using rule 48 (expression -> expression > expression .)
    EQUALS          reduce using rule 48 (expression -> expression > expression .)
    NEQUALS         reduce using rule 48 (expression -> expression > expression .)
    ;               reduce using rule 48 (expression -> expression > expression .)
    ,               reduce using rule 48 (expression -> expression > expression .)
    )               reduce using rule 48 (expression -> expression > expression .)
    :               reduce using rule 48 (expression -> expression > expression .)
    ]               reduce using rule 48 (expression -> expression > expression .)
    {               reduce using rule 48 (expression -> expression > expression .)
    BREAK           reduce using rule 48 (expression -> expression > expression .)
    CONTINUE        reduce using rule 48 (expression -> expression > expression .)
    IF              reduce using rule 48 (expression -> expression > expression .)
    FOR             reduce using rule 48 (expression -> expression > expression .)
    WHILE           reduce using rule 48 (expression -> expression > expression .)
    RETURN          reduce using rule 48 (expression -> expression > expression .)
    PRINT           reduce using rule 48 (expression -> expression > expression .)
    ID              reduce using rule 48 (expression -> expression > expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! +               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTMUL          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! '               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 97

    (49) expression -> expression ELESS expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    <               reduce using rule 49 (expression -> expression ELESS expression .)
    >               reduce using rule 49 (expression -> expression ELESS expression .)
    ELESS           reduce using rule 49 (expression -> expression ELESS expression .)
    EGREATER        reduce using rule 49 (expression -> expression ELESS expression .)
    EQUALS          reduce using rule 49 (expression -> expression ELESS expression .)
    NEQUALS         reduce using rule 49 (expression -> expression ELESS expression .)
    ;               reduce using rule 49 (expression -> expression ELESS expression .)
    ,               reduce using rule 49 (expression -> expression ELESS expression .)
    )               reduce using rule 49 (expression -> expression ELESS expression .)
    :               reduce using rule 49 (expression -> expression ELESS expression .)
    ]               reduce using rule 49 (expression -> expression ELESS expression .)
    {               reduce using rule 49 (expression -> expression ELESS expression .)
    BREAK           reduce using rule 49 (expression -> expression ELESS expression .)
    CONTINUE        reduce using rule 49 (expression -> expression ELESS expression .)
    IF              reduce using rule 49 (expression -> expression ELESS expression .)
    FOR             reduce using rule 49 (expression -> expression ELESS expression .)
    WHILE           reduce using rule 49 (expression -> expression ELESS expression .)
    RETURN          reduce using rule 49 (expression -> expression ELESS expression .)
    PRINT           reduce using rule 49 (expression -> expression ELESS expression .)
    ID              reduce using rule 49 (expression -> expression ELESS expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! +               [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! -               [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! *               [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! /               [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! DOTADD          [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! DOTSUB          [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! DOTMUL          [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! DOTDIV          [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! '               [ reduce using rule 49 (expression -> expression ELESS expression .) ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 98

    (50) expression -> expression EGREATER expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    <               reduce using rule 50 (expression -> expression EGREATER expression .)
    >               reduce using rule 50 (expression -> expression EGREATER expression .)
    ELESS           reduce using rule 50 (expression -> expression EGREATER expression .)
    EGREATER        reduce using rule 50 (expression -> expression EGREATER expression .)
    EQUALS          reduce using rule 50 (expression -> expression EGREATER expression .)
    NEQUALS         reduce using rule 50 (expression -> expression EGREATER expression .)
    ;               reduce using rule 50 (expression -> expression EGREATER expression .)
    ,               reduce using rule 50 (expression -> expression EGREATER expression .)
    )               reduce using rule 50 (expression -> expression EGREATER expression .)
    :               reduce using rule 50 (expression -> expression EGREATER expression .)
    ]               reduce using rule 50 (expression -> expression EGREATER expression .)
    {               reduce using rule 50 (expression -> expression EGREATER expression .)
    BREAK           reduce using rule 50 (expression -> expression EGREATER expression .)
    CONTINUE        reduce using rule 50 (expression -> expression EGREATER expression .)
    IF              reduce using rule 50 (expression -> expression EGREATER expression .)
    FOR             reduce using rule 50 (expression -> expression EGREATER expression .)
    WHILE           reduce using rule 50 (expression -> expression EGREATER expression .)
    RETURN          reduce using rule 50 (expression -> expression EGREATER expression .)
    PRINT           reduce using rule 50 (expression -> expression EGREATER expression .)
    ID              reduce using rule 50 (expression -> expression EGREATER expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! +               [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! -               [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! *               [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! /               [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! DOTADD          [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! DOTSUB          [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! DOTMUL          [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! DOTDIV          [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! '               [ reduce using rule 50 (expression -> expression EGREATER expression .) ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 99

    (51) expression -> expression EQUALS expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    <               reduce using rule 51 (expression -> expression EQUALS expression .)
    >               reduce using rule 51 (expression -> expression EQUALS expression .)
    ELESS           reduce using rule 51 (expression -> expression EQUALS expression .)
    EGREATER        reduce using rule 51 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 51 (expression -> expression EQUALS expression .)
    NEQUALS         reduce using rule 51 (expression -> expression EQUALS expression .)
    ;               reduce using rule 51 (expression -> expression EQUALS expression .)
    ,               reduce using rule 51 (expression -> expression EQUALS expression .)
    )               reduce using rule 51 (expression -> expression EQUALS expression .)
    :               reduce using rule 51 (expression -> expression EQUALS expression .)
    ]               reduce using rule 51 (expression -> expression EQUALS expression .)
    {               reduce using rule 51 (expression -> expression EQUALS expression .)
    BREAK           reduce using rule 51 (expression -> expression EQUALS expression .)
    CONTINUE        reduce using rule 51 (expression -> expression EQUALS expression .)
    IF              reduce using rule 51 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 51 (expression -> expression EQUALS expression .)
    WHILE           reduce using rule 51 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 51 (expression -> expression EQUALS expression .)
    PRINT           reduce using rule 51 (expression -> expression EQUALS expression .)
    ID              reduce using rule 51 (expression -> expression EQUALS expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! +               [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! -               [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! *               [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! DOTADD          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! DOTSUB          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! DOTMUL          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! DOTDIV          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! '               [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 100

    (52) expression -> expression NEQUALS expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    <               reduce using rule 52 (expression -> expression NEQUALS expression .)
    >               reduce using rule 52 (expression -> expression NEQUALS expression .)
    ELESS           reduce using rule 52 (expression -> expression NEQUALS expression .)
    EGREATER        reduce using rule 52 (expression -> expression NEQUALS expression .)
    EQUALS          reduce using rule 52 (expression -> expression NEQUALS expression .)
    NEQUALS         reduce using rule 52 (expression -> expression NEQUALS expression .)
    ;               reduce using rule 52 (expression -> expression NEQUALS expression .)
    ,               reduce using rule 52 (expression -> expression NEQUALS expression .)
    )               reduce using rule 52 (expression -> expression NEQUALS expression .)
    :               reduce using rule 52 (expression -> expression NEQUALS expression .)
    ]               reduce using rule 52 (expression -> expression NEQUALS expression .)
    {               reduce using rule 52 (expression -> expression NEQUALS expression .)
    BREAK           reduce using rule 52 (expression -> expression NEQUALS expression .)
    CONTINUE        reduce using rule 52 (expression -> expression NEQUALS expression .)
    IF              reduce using rule 52 (expression -> expression NEQUALS expression .)
    FOR             reduce using rule 52 (expression -> expression NEQUALS expression .)
    WHILE           reduce using rule 52 (expression -> expression NEQUALS expression .)
    RETURN          reduce using rule 52 (expression -> expression NEQUALS expression .)
    PRINT           reduce using rule 52 (expression -> expression NEQUALS expression .)
    ID              reduce using rule 52 (expression -> expression NEQUALS expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 71

  ! +               [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! -               [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! *               [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! /               [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! DOTADD          [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! DOTSUB          [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! DOTMUL          [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! DOTDIV          [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! '               [ reduce using rule 52 (expression -> expression NEQUALS expression .) ]
  ! <               [ shift and go to state 65 ]
  ! >               [ shift and go to state 66 ]
  ! ELESS           [ shift and go to state 67 ]
  ! EGREATER        [ shift and go to state 68 ]
  ! EQUALS          [ shift and go to state 69 ]
  ! NEQUALS         [ shift and go to state 70 ]


state 101

    (33) expression -> ( expression ) .

    +               reduce using rule 33 (expression -> ( expression ) .)
    -               reduce using rule 33 (expression -> ( expression ) .)
    *               reduce using rule 33 (expression -> ( expression ) .)
    /               reduce using rule 33 (expression -> ( expression ) .)
    DOTADD          reduce using rule 33 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 33 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 33 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 33 (expression -> ( expression ) .)
    <               reduce using rule 33 (expression -> ( expression ) .)
    >               reduce using rule 33 (expression -> ( expression ) .)
    ELESS           reduce using rule 33 (expression -> ( expression ) .)
    EGREATER        reduce using rule 33 (expression -> ( expression ) .)
    EQUALS          reduce using rule 33 (expression -> ( expression ) .)
    NEQUALS         reduce using rule 33 (expression -> ( expression ) .)
    '               reduce using rule 33 (expression -> ( expression ) .)
    ;               reduce using rule 33 (expression -> ( expression ) .)
    ,               reduce using rule 33 (expression -> ( expression ) .)
    )               reduce using rule 33 (expression -> ( expression ) .)
    :               reduce using rule 33 (expression -> ( expression ) .)
    ]               reduce using rule 33 (expression -> ( expression ) .)
    {               reduce using rule 33 (expression -> ( expression ) .)
    BREAK           reduce using rule 33 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 33 (expression -> ( expression ) .)
    IF              reduce using rule 33 (expression -> ( expression ) .)
    FOR             reduce using rule 33 (expression -> ( expression ) .)
    WHILE           reduce using rule 33 (expression -> ( expression ) .)
    RETURN          reduce using rule 33 (expression -> ( expression ) .)
    PRINT           reduce using rule 33 (expression -> ( expression ) .)
    ID              reduce using rule 33 (expression -> ( expression ) .)


state 102

    (37) expression -> matrix_function ( expression . )
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    )               shift and go to state 112
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 103

    (56) vector_1 -> [ vector_2 . ]
    (57) vector_2 -> vector_2 . , expression

    ]               shift and go to state 113
    ,               shift and go to state 114


state 104

    (58) vector_2 -> expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ]               reduce using rule 58 (vector_2 -> expression .)
    ,               reduce using rule 58 (vector_2 -> expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 105

    (54) matrix -> [ vector_1 ] .

    +               reduce using rule 54 (matrix -> [ vector_1 ] .)
    -               reduce using rule 54 (matrix -> [ vector_1 ] .)
    *               reduce using rule 54 (matrix -> [ vector_1 ] .)
    /               reduce using rule 54 (matrix -> [ vector_1 ] .)
    DOTADD          reduce using rule 54 (matrix -> [ vector_1 ] .)
    DOTSUB          reduce using rule 54 (matrix -> [ vector_1 ] .)
    DOTMUL          reduce using rule 54 (matrix -> [ vector_1 ] .)
    DOTDIV          reduce using rule 54 (matrix -> [ vector_1 ] .)
    <               reduce using rule 54 (matrix -> [ vector_1 ] .)
    >               reduce using rule 54 (matrix -> [ vector_1 ] .)
    ELESS           reduce using rule 54 (matrix -> [ vector_1 ] .)
    EGREATER        reduce using rule 54 (matrix -> [ vector_1 ] .)
    EQUALS          reduce using rule 54 (matrix -> [ vector_1 ] .)
    NEQUALS         reduce using rule 54 (matrix -> [ vector_1 ] .)
    '               reduce using rule 54 (matrix -> [ vector_1 ] .)
    ;               reduce using rule 54 (matrix -> [ vector_1 ] .)
    ,               reduce using rule 54 (matrix -> [ vector_1 ] .)
    )               reduce using rule 54 (matrix -> [ vector_1 ] .)
    :               reduce using rule 54 (matrix -> [ vector_1 ] .)
    ]               reduce using rule 54 (matrix -> [ vector_1 ] .)
    {               reduce using rule 54 (matrix -> [ vector_1 ] .)
    BREAK           reduce using rule 54 (matrix -> [ vector_1 ] .)
    CONTINUE        reduce using rule 54 (matrix -> [ vector_1 ] .)
    IF              reduce using rule 54 (matrix -> [ vector_1 ] .)
    FOR             reduce using rule 54 (matrix -> [ vector_1 ] .)
    WHILE           reduce using rule 54 (matrix -> [ vector_1 ] .)
    RETURN          reduce using rule 54 (matrix -> [ vector_1 ] .)
    PRINT           reduce using rule 54 (matrix -> [ vector_1 ] .)
    ID              reduce using rule 54 (matrix -> [ vector_1 ] .)


state 106

    (55) vector_1 -> vector_1 , . [ vector_2 ]

    [               shift and go to state 115


state 107

    (28) printable_list -> printable_list , printable .

    ,               reduce using rule 28 (printable_list -> printable_list , printable .)
    ;               reduce using rule 28 (printable_list -> printable_list , printable .)


state 108

    (14) if -> IF ( expression ) instruction .
    (15) if -> IF ( expression ) instruction . ELSE instruction

    {               reduce using rule 14 (if -> IF ( expression ) instruction .)
    BREAK           reduce using rule 14 (if -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 14 (if -> IF ( expression ) instruction .)
    IF              reduce using rule 14 (if -> IF ( expression ) instruction .)
    FOR             reduce using rule 14 (if -> IF ( expression ) instruction .)
    WHILE           reduce using rule 14 (if -> IF ( expression ) instruction .)
    RETURN          reduce using rule 14 (if -> IF ( expression ) instruction .)
    PRINT           reduce using rule 14 (if -> IF ( expression ) instruction .)
    ID              reduce using rule 14 (if -> IF ( expression ) instruction .)
    $end            reduce using rule 14 (if -> IF ( expression ) instruction .)
    }               reduce using rule 14 (if -> IF ( expression ) instruction .)
    ELSE            shift and go to state 116

  ! ELSE            [ reduce using rule 14 (if -> IF ( expression ) instruction .) ]


state 109

    (16) loop -> FOR ID = expression : . expression instruction
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 117
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 110

    (26) assignable -> ID [ expression , expression . ]
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ]               shift and go to state 118
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 111

    (17) loop -> WHILE ( expression ) instruction .

    {               reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 17 (loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 17 (loop -> WHILE ( expression ) instruction .)


state 112

    (37) expression -> matrix_function ( expression ) .

    +               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    -               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    *               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    /               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    DOTADD          reduce using rule 37 (expression -> matrix_function ( expression ) .)
    DOTSUB          reduce using rule 37 (expression -> matrix_function ( expression ) .)
    DOTMUL          reduce using rule 37 (expression -> matrix_function ( expression ) .)
    DOTDIV          reduce using rule 37 (expression -> matrix_function ( expression ) .)
    <               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    >               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    ELESS           reduce using rule 37 (expression -> matrix_function ( expression ) .)
    EGREATER        reduce using rule 37 (expression -> matrix_function ( expression ) .)
    EQUALS          reduce using rule 37 (expression -> matrix_function ( expression ) .)
    NEQUALS         reduce using rule 37 (expression -> matrix_function ( expression ) .)
    '               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    ;               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    ,               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    )               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    :               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    ]               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    {               reduce using rule 37 (expression -> matrix_function ( expression ) .)
    BREAK           reduce using rule 37 (expression -> matrix_function ( expression ) .)
    CONTINUE        reduce using rule 37 (expression -> matrix_function ( expression ) .)
    IF              reduce using rule 37 (expression -> matrix_function ( expression ) .)
    FOR             reduce using rule 37 (expression -> matrix_function ( expression ) .)
    WHILE           reduce using rule 37 (expression -> matrix_function ( expression ) .)
    RETURN          reduce using rule 37 (expression -> matrix_function ( expression ) .)
    PRINT           reduce using rule 37 (expression -> matrix_function ( expression ) .)
    ID              reduce using rule 37 (expression -> matrix_function ( expression ) .)


state 113

    (56) vector_1 -> [ vector_2 ] .

    ]               reduce using rule 56 (vector_1 -> [ vector_2 ] .)
    ,               reduce using rule 56 (vector_1 -> [ vector_2 ] .)


state 114

    (57) vector_2 -> vector_2 , . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    expression                     shift and go to state 119
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 115

    (55) vector_1 -> vector_1 , [ . vector_2 ]
    (57) vector_2 -> . vector_2 , expression
    (58) vector_2 -> . expression
    (32) expression -> . assignable
    (33) expression -> . ( expression )
    (34) expression -> . INTNUM
    (35) expression -> . FLOATNUM
    (36) expression -> . matrix
    (37) expression -> . matrix_function ( expression )
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression * expression
    (41) expression -> . expression / expression
    (42) expression -> . - expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression ELESS expression
    (50) expression -> . expression EGREATER expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression NEQUALS expression
    (53) expression -> . expression '
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]
    (54) matrix -> . [ vector_1 ]
    (59) matrix_function -> . EYE
    (60) matrix_function -> . ZEROS
    (61) matrix_function -> . ONES

    (               shift and go to state 33
    INTNUM          shift and go to state 34
    FLOATNUM        shift and go to state 35
    -               shift and go to state 38
    ID              shift and go to state 15
    [               shift and go to state 39
    EYE             shift and go to state 40
    ZEROS           shift and go to state 41
    ONES            shift and go to state 42

    vector_2                       shift and go to state 120
    expression                     shift and go to state 104
    assignable                     shift and go to state 32
    matrix                         shift and go to state 36
    matrix_function                shift and go to state 37

state 116

    (15) if -> IF ( expression ) instruction ELSE . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instruction                    shift and go to state 121
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 117

    (16) loop -> FOR ID = expression : expression . instruction
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . loop
    (9) instruction -> . return ;
    (10) instruction -> . assignment ;
    (11) instruction -> . print ;
    (12) instruction -> . BREAK ;
    (13) instruction -> . CONTINUE ;
    (14) if -> . IF ( expression ) instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) loop -> . FOR ID = expression : expression instruction
    (17) loop -> . WHILE ( expression ) instruction
    (18) return -> . RETURN
    (19) return -> . RETURN expression
    (20) assignment -> . assignable = expression
    (21) assignment -> . assignable ADDASSIGN expression
    (22) assignment -> . assignable SUBASSIGN expression
    (23) assignment -> . assignable MULASSIGN expression
    (24) assignment -> . assignable DIVASSIGN expression
    (27) print -> . PRINT printable_list
    (25) assignable -> . ID
    (26) assignable -> . ID [ expression , expression ]

    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71
    {               shift and go to state 5
    BREAK           shift and go to state 11
    CONTINUE        shift and go to state 12
    IF              shift and go to state 13
    FOR             shift and go to state 14
    WHILE           shift and go to state 16
    RETURN          shift and go to state 17
    PRINT           shift and go to state 19
    ID              shift and go to state 15

    instruction                    shift and go to state 122
    if                             shift and go to state 6
    loop                           shift and go to state 7
    return                         shift and go to state 8
    assignment                     shift and go to state 9
    print                          shift and go to state 10
    assignable                     shift and go to state 18

state 118

    (26) assignable -> ID [ expression , expression ] .

    =               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    +               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    -               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    *               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    /               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    <               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    >               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    ELESS           reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    EGREATER        reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    EQUALS          reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    NEQUALS         reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    '               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    ;               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    ,               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    )               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    :               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    ]               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    {               reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    BREAK           reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    IF              reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    FOR             reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    WHILE           reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    RETURN          reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    PRINT           reduce using rule 26 (assignable -> ID [ expression , expression ] .)
    ID              reduce using rule 26 (assignable -> ID [ expression , expression ] .)


state 119

    (57) vector_2 -> vector_2 , expression .
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . * expression
    (41) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . ELESS expression
    (50) expression -> expression . EGREATER expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . NEQUALS expression
    (53) expression -> expression . '

    ]               reduce using rule 57 (vector_2 -> vector_2 , expression .)
    ,               reduce using rule 57 (vector_2 -> vector_2 , expression .)
    +               shift and go to state 57
    -               shift and go to state 58
    *               shift and go to state 59
    /               shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    <               shift and go to state 65
    >               shift and go to state 66
    ELESS           shift and go to state 67
    EGREATER        shift and go to state 68
    EQUALS          shift and go to state 69
    NEQUALS         shift and go to state 70
    '               shift and go to state 71


state 120

    (55) vector_1 -> vector_1 , [ vector_2 . ]
    (57) vector_2 -> vector_2 . , expression

    ]               shift and go to state 123
    ,               shift and go to state 114


state 121

    (15) if -> IF ( expression ) instruction ELSE instruction .

    {               reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)


state 122

    (16) loop -> FOR ID = expression : expression instruction .

    {               reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    BREAK           reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    CONTINUE        reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    IF              reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    FOR             reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    WHILE           reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    RETURN          reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    PRINT           reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    ID              reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    $end            reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    }               reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)
    ELSE            reduce using rule 16 (loop -> FOR ID = expression : expression instruction .)


state 123

    (55) vector_1 -> vector_1 , [ vector_2 ] .

    ]               reduce using rule 55 (vector_1 -> vector_1 , [ vector_2 ] .)
    ,               reduce using rule 55 (vector_1 -> vector_1 , [ vector_2 ] .)

